<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="4612577d-8a2b-44ed-acb9-554119a34672" activeEnvironment="Default" name="GroovyExamples" resourceRoot="" soapui-version="5.6.0" abortOnError="false" runType="SEQUENTIAL" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config"><con:description>Проект с примерами скриптов, запросов и параметризации.
Состав: Тест-суит "Script Library Soap"
Scripts - примеры скриптов, собранные по темам.
Example 1-n: примеры запросов с проверками. Запросы к веб-сервисам (кроме ОКАТО) 
используют мок-сервисы (ACS MockService SOAP и ParserManager MockService). 
Запрос к FTP загружает файл на тестовый FTP АВТО ПДП (в свойства тест-кейса - адрес).

Требуются либы:
ojdbc8.jar (мин. версия)
postgresql-42.1.1.jar (мин. версия)
commons-net-3.6.jar</con:description><con:settings/><con:interface xsi:type="con:WsdlInterface" id="47afcc9e-f33f-473d-932e-99007c78341b" wsaVersion="NONE" name="AccessControlServiceSoapBinding" type="wsdl" bindingName="{http://ejb.acs.egis.inforion.ru}AccessControlServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl?wsdl"><con:part><con:url>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="AccessControlService" targetNamespace="http://ejb.acs.egis.inforion.ru" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://ejb.acs.egis.inforion.ru" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http">
  <wsdl:types>
    <xs:schema targetNamespace="http://usists.ru/asteros/data" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://usists.ru/asteros/data">
      <xs:element name="Data" type="tns:Data"/>
      <xs:element name="DataType" type="tns:DataType"/>
      <xs:element name="TransferMessage" type="tns:TransferMessage"/>
      <xs:complexType name="TransferMessage">
        <xs:sequence>
          <xs:element minOccurs="0" name="header" type="tns:Header"/>
          <xs:element name="transferData" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Header">
        <xs:sequence>
          <xs:element name="createTime" nillable="true" type="xs:dateTime"/>
          <xs:element name="creatorId" nillable="true" type="xs:string"/>
          <xs:element name="creatorType" type="xs:int"/>
          <xs:element name="dataType" nillable="true" type="tns:DataType"/>
          <xs:element name="messageId" nillable="true" type="xs:string"/>
          <xs:element name="password" nillable="true" type="xs:string"/>
          <xs:element name="transferSystemId" nillable="true" type="xs:string"/>
          <xs:element name="alLogin" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DataType">
        <xs:sequence>
          <xs:element minOccurs="0" name="data" type="xs:int"/>
          <xs:element name="transport" type="xs:int"/>
          <xs:element name="format" type="xs:int"/>
          <xs:element name="method" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Data">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="data" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://ejb.acs.egis.inforion.ru" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://usists.ru/asteros/data" xmlns="http://ejb.acs.egis.inforion.ru">
      <xs:import namespace="http://usists.ru/asteros/data"/>
      <xs:element name="sendCheckRecordsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendCheckRecordsRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendCheckRecordsRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendCommand">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendCommandResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendCommandReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendDataReadNotPDPRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendDataReadNotPDPRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendDataReadNotPDPRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendDataReadPDPRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendDataReadPDPRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendDataReadPDPRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendDataReadStatRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendDataReadStatRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendDataReadStatRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendDataWriteRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendDataWriteRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendDataWriteRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendEmergencyStartRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendEmergencyStartRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendEmergencyStartRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendFileArchiveRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendFileArchiveRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendFileArchiveRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendFileReadRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendFileReadRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendFileReadRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendFileSearchRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendFileSearchRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendFileSearchRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendFileWriteRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendFileWriteRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendFileWriteRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendPBDLogsReadRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendPBDLogsReadRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendPBDLogsReadRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendPVBLogsReadRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendPVBLogsReadRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendPVBLogsReadRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendWrongRecordReadRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendWrongRecordReadRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendWrongRecordReadRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendWrongRecordWriteRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="transferMsg" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendWrongRecordWriteRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sendWrongRecordWriteRequestReturn" nillable="true" type="ns1:TransferMessage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="sendFileSearchRequest">
    <wsdl:part element="tns:sendFileSearchRequest" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendPBDLogsReadRequestResponse">
    <wsdl:part element="tns:sendPBDLogsReadRequestResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendFileSearchRequestResponse">
    <wsdl:part element="tns:sendFileSearchRequestResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendFileArchiveRequest">
    <wsdl:part element="tns:sendFileArchiveRequest" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendWrongRecordWriteRequestResponse">
    <wsdl:part element="tns:sendWrongRecordWriteRequestResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendDataReadStatRequest">
    <wsdl:part element="tns:sendDataReadStatRequest" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendWrongRecordWriteRequest">
    <wsdl:part element="tns:sendWrongRecordWriteRequest" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendCommand">
    <wsdl:part element="tns:sendCommand" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendFileReadRequestResponse">
    <wsdl:part element="tns:sendFileReadRequestResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendPVBLogsReadRequestResponse">
    <wsdl:part element="tns:sendPVBLogsReadRequestResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendCommandResponse">
    <wsdl:part element="tns:sendCommandResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendDataWriteRequest">
    <wsdl:part element="tns:sendDataWriteRequest" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendDataReadStatRequestResponse">
    <wsdl:part element="tns:sendDataReadStatRequestResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendDataReadNotPDPRequest">
    <wsdl:part element="tns:sendDataReadNotPDPRequest" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendDataReadPDPRequest">
    <wsdl:part element="tns:sendDataReadPDPRequest" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendFileReadRequest">
    <wsdl:part element="tns:sendFileReadRequest" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendCheckRecordsRequest">
    <wsdl:part element="tns:sendCheckRecordsRequest" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendPBDLogsReadRequest">
    <wsdl:part element="tns:sendPBDLogsReadRequest" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendFileArchiveRequestResponse">
    <wsdl:part element="tns:sendFileArchiveRequestResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendCheckRecordsRequestResponse">
    <wsdl:part element="tns:sendCheckRecordsRequestResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendFileWriteRequest">
    <wsdl:part element="tns:sendFileWriteRequest" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendFileWriteRequestResponse">
    <wsdl:part element="tns:sendFileWriteRequestResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendPVBLogsReadRequest">
    <wsdl:part element="tns:sendPVBLogsReadRequest" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendDataReadPDPRequestResponse">
    <wsdl:part element="tns:sendDataReadPDPRequestResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendDataReadNotPDPRequestResponse">
    <wsdl:part element="tns:sendDataReadNotPDPRequestResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendDataWriteRequestResponse">
    <wsdl:part element="tns:sendDataWriteRequestResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendWrongRecordReadRequestResponse">
    <wsdl:part element="tns:sendWrongRecordReadRequestResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendWrongRecordReadRequest">
    <wsdl:part element="tns:sendWrongRecordReadRequest" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="AccessControl">
    <wsdl:operation name="sendFileSearchRequest">
      <wsdl:input message="tns:sendFileSearchRequest" name="sendFileSearchRequest"></wsdl:input>
      <wsdl:output message="tns:sendFileSearchRequestResponse" name="sendFileSearchRequestResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendFileWriteRequest">
      <wsdl:input message="tns:sendFileWriteRequest" name="sendFileWriteRequest"></wsdl:input>
      <wsdl:output message="tns:sendFileWriteRequestResponse" name="sendFileWriteRequestResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendFileArchiveRequest">
      <wsdl:input message="tns:sendFileArchiveRequest" name="sendFileArchiveRequest"></wsdl:input>
      <wsdl:output message="tns:sendFileArchiveRequestResponse" name="sendFileArchiveRequestResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendPVBLogsReadRequest">
      <wsdl:input message="tns:sendPVBLogsReadRequest" name="sendPVBLogsReadRequest"></wsdl:input>
      <wsdl:output message="tns:sendPVBLogsReadRequestResponse" name="sendPVBLogsReadRequestResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendDataReadStatRequest">
      <wsdl:input message="tns:sendDataReadStatRequest" name="sendDataReadStatRequest"></wsdl:input>
      <wsdl:output message="tns:sendDataReadStatRequestResponse" name="sendDataReadStatRequestResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendWrongRecordWriteRequest">
      <wsdl:input message="tns:sendWrongRecordWriteRequest" name="sendWrongRecordWriteRequest"></wsdl:input>
      <wsdl:output message="tns:sendWrongRecordWriteRequestResponse" name="sendWrongRecordWriteRequestResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendCommand">
      <wsdl:input message="tns:sendCommand" name="sendCommand"></wsdl:input>
      <wsdl:output message="tns:sendCommandResponse" name="sendCommandResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendDataWriteRequest">
      <wsdl:input message="tns:sendDataWriteRequest" name="sendDataWriteRequest"></wsdl:input>
      <wsdl:output message="tns:sendDataWriteRequestResponse" name="sendDataWriteRequestResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendWrongRecordReadRequest">
      <wsdl:input message="tns:sendWrongRecordReadRequest" name="sendWrongRecordReadRequest"></wsdl:input>
      <wsdl:output message="tns:sendWrongRecordReadRequestResponse" name="sendWrongRecordReadRequestResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendDataReadNotPDPRequest">
      <wsdl:input message="tns:sendDataReadNotPDPRequest" name="sendDataReadNotPDPRequest"></wsdl:input>
      <wsdl:output message="tns:sendDataReadNotPDPRequestResponse" name="sendDataReadNotPDPRequestResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendDataReadPDPRequest">
      <wsdl:input message="tns:sendDataReadPDPRequest" name="sendDataReadPDPRequest"></wsdl:input>
      <wsdl:output message="tns:sendDataReadPDPRequestResponse" name="sendDataReadPDPRequestResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendFileReadRequest">
      <wsdl:input message="tns:sendFileReadRequest" name="sendFileReadRequest"></wsdl:input>
      <wsdl:output message="tns:sendFileReadRequestResponse" name="sendFileReadRequestResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendCheckRecordsRequest">
      <wsdl:input message="tns:sendCheckRecordsRequest" name="sendCheckRecordsRequest"></wsdl:input>
      <wsdl:output message="tns:sendCheckRecordsRequestResponse" name="sendCheckRecordsRequestResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendPBDLogsReadRequest">
      <wsdl:input message="tns:sendPBDLogsReadRequest" name="sendPBDLogsReadRequest"></wsdl:input>
      <wsdl:output message="tns:sendPBDLogsReadRequestResponse" name="sendPBDLogsReadRequestResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="AccessControlServiceSoapBinding" type="tns:AccessControl">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="sendFileSearchRequest">
      <soap:operation soapAction="sendFileSearchRequest" style="document"/>
      <wsdl:input name="sendFileSearchRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendFileSearchRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendFileWriteRequest">
      <soap:operation soapAction="sendFileWriteRequest" style="document"/>
      <wsdl:input name="sendFileWriteRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendFileWriteRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendFileArchiveRequest">
      <soap:operation soapAction="sendFileArchiveRequest" style="document"/>
      <wsdl:input name="sendFileArchiveRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendFileArchiveRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendPVBLogsReadRequest">
      <soap:operation soapAction="sendPVBLogsReadRequest" style="document"/>
      <wsdl:input name="sendPVBLogsReadRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendPVBLogsReadRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendDataReadStatRequest">
      <soap:operation soapAction="sendDataReadStatRequest" style="document"/>
      <wsdl:input name="sendDataReadStatRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendDataReadStatRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendWrongRecordWriteRequest">
      <soap:operation soapAction="sendWrongRecordWriteRequest" style="document"/>
      <wsdl:input name="sendWrongRecordWriteRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendWrongRecordWriteRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendCommand">
      <soap:operation soapAction="sendCommand" style="document"/>
      <wsdl:input name="sendCommand">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendCommandResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendDataWriteRequest">
      <soap:operation soapAction="sendDataWriteRequest" style="document"/>
      <wsdl:input name="sendDataWriteRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendDataWriteRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendWrongRecordReadRequest">
      <soap:operation soapAction="sendWrongRecordReadRequest" style="document"/>
      <wsdl:input name="sendWrongRecordReadRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendWrongRecordReadRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendDataReadNotPDPRequest">
      <soap:operation soapAction="sendDataReadNotPDPRequest" style="document"/>
      <wsdl:input name="sendDataReadNotPDPRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendDataReadNotPDPRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendDataReadPDPRequest">
      <soap:operation soapAction="sendDataReadPDPRequest" style="document"/>
      <wsdl:input name="sendDataReadPDPRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendDataReadPDPRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendFileReadRequest">
      <soap:operation soapAction="sendFileReadRequest" style="document"/>
      <wsdl:input name="sendFileReadRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendFileReadRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendCheckRecordsRequest">
      <soap:operation soapAction="sendCheckRecordsRequest" style="document"/>
      <wsdl:input name="sendCheckRecordsRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendCheckRecordsRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendPBDLogsReadRequest">
      <soap:operation soapAction="sendPBDLogsReadRequest" style="document"/>
      <wsdl:input name="sendPBDLogsReadRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendPBDLogsReadRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AccessControlService">
    <wsdl:port binding="tns:AccessControlServiceSoapBinding" name="AccessControl">
      <soap:address location="http://IMP-PUD-WF:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:endpoint>http://localhost:8088/mockAccessControlServiceSoapBinding</con:endpoint></con:endpoints><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec><con:operation id="54a11bc9-d9af-4b3f-b84a-22e6e66ece70" isOneWay="false" action="sendCheckRecordsRequest" name="sendCheckRecordsRequest" bindingOperationName="sendCheckRecordsRequest" type="Request-Response" outputName="sendCheckRecordsRequestResponse" inputName="sendCheckRecordsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="02291c87-07e0-4ed9-9d20-2e1923199d1c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendCheckRecordsRequest>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendCheckRecordsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendCheckRecordsRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation><con:operation id="21b084e8-69a4-47f7-b34a-25cc2df2971e" isOneWay="false" action="sendCommand" name="sendCommand" bindingOperationName="sendCommand" type="Request-Response" outputName="sendCommandResponse" inputName="sendCommand" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="300a6aff-a9f1-4c64-b0fd-b6ade8389785" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendCommand>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendCommand>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendCommand"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation><con:operation id="6af1a7ac-6c2e-4710-9417-e5fd6ee8d812" isOneWay="false" action="sendDataReadNotPDPRequest" name="sendDataReadNotPDPRequest" bindingOperationName="sendDataReadNotPDPRequest" type="Request-Response" outputName="sendDataReadNotPDPRequestResponse" inputName="sendDataReadNotPDPRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="724b6dfe-dd7c-408e-acf7-23883c7b7eb7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendDataReadNotPDPRequest>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendDataReadNotPDPRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendDataReadNotPDPRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation><con:operation id="6a2e31ae-e42a-4479-bfa7-4a60332d8020" isOneWay="false" action="sendDataReadPDPRequest" name="sendDataReadPDPRequest" bindingOperationName="sendDataReadPDPRequest" type="Request-Response" outputName="sendDataReadPDPRequestResponse" inputName="sendDataReadPDPRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4cc5275e-fd40-4892-9e16-a3e1b1cebaa7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendDataReadPDPRequest>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendDataReadPDPRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendDataReadPDPRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation><con:operation id="61d2de50-71fc-408a-94b5-6234b92881fe" isOneWay="false" action="sendDataReadStatRequest" name="sendDataReadStatRequest" bindingOperationName="sendDataReadStatRequest" type="Request-Response" outputName="sendDataReadStatRequestResponse" inputName="sendDataReadStatRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="86c9f18c-5500-4054-b46b-c29318a06154" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendDataReadStatRequest>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendDataReadStatRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendDataReadStatRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation><con:operation id="7baf4bdf-cbb4-4c69-832f-ea615e8fffce" isOneWay="false" action="sendDataWriteRequest" name="sendDataWriteRequest" bindingOperationName="sendDataWriteRequest" type="Request-Response" outputName="sendDataWriteRequestResponse" inputName="sendDataWriteRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8b2880f1-2525-4d5a-bbd7-7a533949740a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendDataWriteRequest>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendDataWriteRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendDataWriteRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation><con:operation id="62ec692b-0c47-4dfa-9c3e-31a7d8e20848" isOneWay="false" action="sendFileArchiveRequest" name="sendFileArchiveRequest" bindingOperationName="sendFileArchiveRequest" type="Request-Response" outputName="sendFileArchiveRequestResponse" inputName="sendFileArchiveRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="efece85c-df73-4bd0-9231-24cc463bbc72" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendFileArchiveRequest>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendFileArchiveRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendFileArchiveRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation><con:operation id="f2014319-1952-47b6-ac7a-ad324e1ff3d4" isOneWay="false" action="sendFileReadRequest" name="sendFileReadRequest" bindingOperationName="sendFileReadRequest" type="Request-Response" outputName="sendFileReadRequestResponse" inputName="sendFileReadRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8dfff757-76a8-4ddf-aa38-0994ff809f43" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendFileReadRequest>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendFileReadRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendFileReadRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation><con:operation id="165baff6-ad2a-41d8-916f-41123aa6779e" isOneWay="false" action="sendFileSearchRequest" name="sendFileSearchRequest" bindingOperationName="sendFileSearchRequest" type="Request-Response" outputName="sendFileSearchRequestResponse" inputName="sendFileSearchRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f65fe934-96ba-4664-9590-0d097af72b30" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendFileSearchRequest>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendFileSearchRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendFileSearchRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation><con:operation id="e162a638-e2cf-4a44-8129-b0ef05a9aea7" isOneWay="false" action="sendFileWriteRequest" name="sendFileWriteRequest" bindingOperationName="sendFileWriteRequest" type="Request-Response" outputName="sendFileWriteRequestResponse" inputName="sendFileWriteRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a0f3773a-880c-4700-b37c-8b9c686b7084" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendFileWriteRequest>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendFileWriteRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendFileWriteRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation><con:operation id="c8b8a2d5-a0f9-45d3-a65a-ace02fa459c1" isOneWay="false" action="sendPBDLogsReadRequest" name="sendPBDLogsReadRequest" bindingOperationName="sendPBDLogsReadRequest" type="Request-Response" outputName="sendPBDLogsReadRequestResponse" inputName="sendPBDLogsReadRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9f4d5087-d031-4659-b012-75055750c76e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendPBDLogsReadRequest>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendPBDLogsReadRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendPBDLogsReadRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation><con:operation id="1fdcbf50-c26e-4fd9-95de-96881055d28d" isOneWay="false" action="sendPVBLogsReadRequest" name="sendPVBLogsReadRequest" bindingOperationName="sendPVBLogsReadRequest" type="Request-Response" outputName="sendPVBLogsReadRequestResponse" inputName="sendPVBLogsReadRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="faf8c200-2a51-4ea7-aeed-a5f004a8ee9e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendPVBLogsReadRequest>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendPVBLogsReadRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendPVBLogsReadRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation><con:operation id="cf3f7529-b57b-4714-b9af-987b995b7a9e" isOneWay="false" action="sendWrongRecordReadRequest" name="sendWrongRecordReadRequest" bindingOperationName="sendWrongRecordReadRequest" type="Request-Response" outputName="sendWrongRecordReadRequestResponse" inputName="sendWrongRecordReadRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0cdd8489-9e78-4a66-80b4-e28c9f61da01" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendWrongRecordReadRequest>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendWrongRecordReadRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendWrongRecordReadRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation><con:operation id="97fdeae6-bc29-4025-ac48-55cfb4f6ed15" isOneWay="false" action="sendWrongRecordWriteRequest" name="sendWrongRecordWriteRequest" bindingOperationName="sendWrongRecordWriteRequest" type="Request-Response" outputName="sendWrongRecordWriteRequestResponse" inputName="sendWrongRecordWriteRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ecc40ecb-2171-4cde-a00e-2fe365c1480b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.65.108:8080/AccessControlSystemEJBProjectHttpRouter/services/AccessControl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ejb:sendWrongRecordWriteRequest>\r
         <transferMsg>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </transferMsg>\r
      </ejb:sendWrongRecordWriteRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendWrongRecordWriteRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="4d3c3364-15a2-451a-85c4-12d1cf8227aa" wsaVersion="NONE" name="ParserManagerBinding" type="wsdl" bindingName="{http://www.egis-otb.ru/general/pmanager}ParserManagerBinding" soapVersion="1_1" anonymous="optional" definition="http://192.168.70.92:9081/ParserManagerRouter/ParserManager/ParserManager.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://192.168.70.92:9081/ParserManagerRouter/ParserManager/ParserManager.wsdl"><con:part><con:url>http://192.168.70.92:9081/ParserManagerRouter/ParserManager/ParserManager.wsdl</con:url><con:content><![CDATA[<definitions name="ParserManager" targetNamespace="http://www.egis-otb.ru/general/pmanager" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.egis-otb.ru/general/pmanager" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://www.egis-otb.ru/general/pmanager" schemaLocation="ParserManager_schema1.xsd"/>
    </xsd:schema>
    <xsd:schema>
      <xsd:import namespace="http://usists.ru/asteros/data" schemaLocation="ParserManager_schema2.xsd"/>
    </xsd:schema>
  </types>
  <message name="parseFile">
    <part name="parameters" element="tns:parseFile"></part>
  </message>
  <message name="parseFileResponse">
    <part name="parameters" element="tns:parseFileResponse"></part>
  </message>
  <portType name="ParserManager">
    <operation name="parseFile">
      <input message="tns:parseFile"></input>
      <output message="tns:parseFileResponse"></output>
    </operation>
  </portType>
  <binding name="ParserManagerBinding" type="tns:ParserManager">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="parseFile">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="ParserManager">
    <port name="ParserManager" binding="tns:ParserManagerBinding">
      <soap:address location="http://192.168.70.92:9081/ParserManagerRouter/ParserManager"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://192.168.70.92:9081/ParserManagerRouter/ParserManager/ParserManager_schema1.xsd</con:url><con:content><![CDATA[<xs:schema version="1.0" targetNamespace="http://www.egis-otb.ru/general/pmanager" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.egis-otb.ru/general/pmanager" xmlns:ns1="http://usists.ru/asteros/data">
  <xs:import namespace="http://usists.ru/asteros/data" schemaLocation="ParserManager_schema2.xsd"/>
  <xs:element name="parseFile" type="tns:parseFile"/>
  <xs:element name="parseFileResponse" type="tns:parseFileResponse"/>
  <xs:complexType name="parseFile">
    <xs:sequence>
      <xs:element name="arg0" type="ns1:TransferMessage" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="parseFileResponse">
    <xs:sequence>
      <xs:element name="return" type="ns1:TransferMessage" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://192.168.70.92:9081/ParserManagerRouter/ParserManager/ParserManager_schema2.xsd</con:url><con:content><![CDATA[<xs:schema version="1.0" targetNamespace="http://usists.ru/asteros/data" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://usists.ru/asteros/data">
  <xs:complexType name="TransferMessage">
    <xs:sequence>
      <xs:element name="header" type="tns:Header" minOccurs="0"/>
      <xs:element name="transferData" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:element name="createTime" type="xs:dateTime" nillable="true"/>
      <xs:element name="creatorId" type="xs:string" nillable="true"/>
      <xs:element name="creatorType" type="xs:int"/>
      <xs:element name="dataType" type="tns:DataType" nillable="true"/>
      <xs:element name="messageId" type="xs:string" nillable="true"/>
      <xs:element name="password" type="xs:string" nillable="true"/>
      <xs:element name="transferSystemId" type="xs:string" nillable="true"/>
      <xs:element name="alLogin" type="xs:string" nillable="true"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DataType">
    <xs:sequence>
      <xs:element name="data" type="xs:int" minOccurs="0"/>
      <xs:element name="transport" type="xs:int"/>
      <xs:element name="format" type="xs:int"/>
      <xs:element name="method" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://192.168.70.92:9081/ParserManagerRouter/ParserManager</con:endpoint><con:endpoint>http://localhost:8088/mockParserManagerBinding</con:endpoint></con:endpoints><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec><con:operation id="551c8953-7389-4476-978b-af6eb9eeb282" isOneWay="false" action="" name="parseFile" bindingOperationName="parseFile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ba2cb25e-003a-466d-885e-b337e59f547a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.70.92:9081/ParserManagerRouter/ParserManager</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pman="http://www.egis-otb.ru/general/pmanager">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <pman:parseFile>\r
         <!--Optional:-->\r
         <arg0>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </arg0>\r
      </pman:parseFile>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.egis-otb.ru/general/pmanager/ParserManager/parseFileRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="03623991-fb75-444a-98d3-e7f37f063a69" wsaVersion="NONE" name="OkatoServiceBinding" type="wsdl" bindingName="{http://www.egis-otb.ru/services/general/onsi/okato}OkatoServiceBinding" soapVersion="1_1" anonymous="optional" definition="http://192.168.70.92:9081/Services/OkatoService/OkatoService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://192.168.70.92:9081/Services/OkatoService/OkatoService.wsdl"><con:part><con:url>http://192.168.70.92:9081/Services/OkatoService/OkatoService.wsdl</con:url><con:content><![CDATA[<definitions name="OkatoService" targetNamespace="http://www.egis-otb.ru/services/general/onsi/okato" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.egis-otb.ru/services/general/onsi/okato" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://www.egis-otb.ru/services/interfaces/">
  <import namespace="http://www.egis-otb.ru/services/interfaces/" location="IRequestGate.wsdl"></import>
  <binding name="OkatoServiceBinding" type="ns1:IRequestGate">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="processRequest">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="OkatoService">
    <port name="OkatoService" binding="tns:OkatoServiceBinding">
      <soap:address location="http://192.168.70.92:9081/Services/OkatoService"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://192.168.70.92:9081/Services/OkatoService/IRequestGate.wsdl</con:url><con:content><![CDATA[<definitions targetNamespace="http://www.egis-otb.ru/services/interfaces/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.egis-otb.ru/services/interfaces/">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://www.egis-otb.ru/services/interfaces/" schemaLocation="IRequestGate_schema1.xsd"/>
    </xsd:schema>
    <xsd:schema>
      <xsd:import namespace="http://usists.ru/asteros/data" schemaLocation="IRequestGate_schema2.xsd"/>
    </xsd:schema>
  </types>
  <message name="processRequestResponse">
    <part name="parameters" element="tns:processRequestResponse"></part>
  </message>
  <message name="processRequest">
    <part name="parameters" element="tns:processRequest"></part>
  </message>
  <portType name="IRequestGate">
    <operation name="processRequest">
      <input message="tns:processRequest"></input>
      <output message="tns:processRequestResponse"></output>
    </operation>
  </portType>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://192.168.70.92:9081/Services/OkatoService/IRequestGate_schema1.xsd</con:url><con:content><![CDATA[<xs:schema version="1.0" targetNamespace="http://www.egis-otb.ru/services/interfaces/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.egis-otb.ru/services/interfaces/" xmlns:ns1="http://usists.ru/asteros/data">
  <xs:import namespace="http://usists.ru/asteros/data" schemaLocation="IRequestGate_schema2.xsd"/>
  <xs:element name="processRequest" type="tns:processRequest"/>
  <xs:element name="processRequestResponse" type="tns:processRequestResponse"/>
  <xs:complexType name="processRequest">
    <xs:sequence>
      <xs:element name="arg0" type="ns1:TransferMessage" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="processRequestResponse">
    <xs:sequence>
      <xs:element name="return" type="ns1:TransferMessage" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://192.168.70.92:9081/Services/OkatoService/IRequestGate_schema2.xsd</con:url><con:content><![CDATA[<xs:schema version="1.0" targetNamespace="http://usists.ru/asteros/data" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://usists.ru/asteros/data">
  <xs:complexType name="TransferMessage">
    <xs:sequence>
      <xs:element name="header" type="tns:Header" minOccurs="0"/>
      <xs:element name="transferData" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:element name="createTime" type="xs:dateTime" nillable="true"/>
      <xs:element name="creatorId" type="xs:string" nillable="true"/>
      <xs:element name="creatorType" type="xs:int"/>
      <xs:element name="dataType" type="tns:DataType" nillable="true"/>
      <xs:element name="messageId" type="xs:string" nillable="true"/>
      <xs:element name="password" type="xs:string" nillable="true"/>
      <xs:element name="transferSystemId" type="xs:string" nillable="true"/>
      <xs:element name="alLogin" type="xs:string" nillable="true"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DataType">
    <xs:sequence>
      <xs:element name="data" type="xs:int" minOccurs="0"/>
      <xs:element name="transport" type="xs:int"/>
      <xs:element name="format" type="xs:int"/>
      <xs:element name="method" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://192.168.70.92:9081/Services/OkatoService</con:endpoint></con:endpoints><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec><con:operation id="25c5daf3-28bd-47ea-af5d-f0afe3f03ba6" isOneWay="false" action="" name="processRequest" bindingOperationName="processRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e17bcc21-78e2-48ee-88b0-493e255f4052" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.70.92:9081/Services/OkatoService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:int="http://www.egis-otb.ru/services/interfaces/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <int:processRequest>\r
         <!--Optional:-->\r
         <arg0>\r
            <!--Optional:-->\r
            <header>\r
               <createTime>?</createTime>\r
               <creatorId>?</creatorId>\r
               <creatorType>?</creatorType>\r
               <dataType>\r
                  <!--Optional:-->\r
                  <data>?</data>\r
                  <transport>?</transport>\r
                  <format>?</format>\r
                  <method>?</method>\r
               </dataType>\r
               <messageId>?</messageId>\r
               <password>?</password>\r
               <transferSystemId>?</transferSystemId>\r
               <alLogin>?</alLogin>\r
            </header>\r
            <transferData>?</transferData>\r
         </arg0>\r
      </int:processRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.egis-otb.ru/services/general/onsi/okato/IRequestGate/processRequestRequest"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec><con:wsrmConfig version="1.2"/></con:call><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:operation></con:interface><con:testSuite id="d0b72774-6195-4f12-a2bc-01d14693376a" name="Script Library SOAP"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="2589060f-6a61-4526-a2af-2ba7ec1a2795" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Scripts" searchProperties="true"><con:settings/><con:testStep type="groovy" name="DB_Oracle_Scripts | БД Oracle Скрипты" id="a4c42ef5-7e6c-460d-82f4-ed8a73fb4a12"><con:settings/><con:config><script>import groovy.sql.Sql
import java.sql.Driver
import org.codehaus.groovy.runtime.StackTraceUtils 

/* Пример подключения со считыванием строки подключения из переменной. 
 * В переменой записано: jdbc:oracle:thin:@192.168.70.90:1521:orcl,testadmin,oracle,oracle.jdbc.OracleDriver (деление строки по "," (см. свойства тест-суита)*/

def (conString, conUser, conPass, conDriver) = testRunner.testCase.testSuite.getPropertyValue( "dbConnectionVZO" ).split(",")
def sql = Sql.newInstance(conString,conUser,conPass,conDriver)
log.info ("Connection established")
sql.close()

// Подключение к БД на примере САТ и Тестовой.*/

def sql = Sql.newInstance("jdbc:oracle:thin:@192.168.65.47:orcl","TEST3","oracle","oracle.jdbc.OracleDriver") //САТ
log.info ("Connection established")
sql.close() //после выполнения всех операций закрываем соединение 

def sql = Sql.newInstance("jdbc:oracle:thin:@192.168.70.90:1521:orcl","testadmin","oracle","oracle.jdbc.OracleDriver") //Тестовая
log.info ("Connection established")

sql.withStatement { 
	stmt -> stmt.queryTimeout = 30  // Установить Timeout. Программа ждет выполнения не более 30 с
} 

// Чтение значения из БД (PBD_TEST)
def rows = sql.rows '''
SELECT name FROM PBD_TEST.auto_event WHERE ID = 'e23322e7-8109-475a-9e77-dcd6d2b4ebff'
'''
log.info(" Имя человека: " + rows[0][0])

// Вставка значения в БД (в ACS_TEST)
sql.execute """
INSERT INTO ACS_TEST.user_account VALUES ('dbuser', 'dbpassword', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1','1', '1', '1', '1', '1')
"""
// Удаляем вставленное ранее значение
sql.execute """
DELETE FROM ACS_TEST.user_account WHERE login = 'dbuser'
"""
// Очистка БД по arrayId на примере ВЗХ с методом (для сегмента авто (AUTO), название базы ПДн, базы архива и arrayId)
// Выдаст ошибку, если такого arrayId нету, приведено для примера с методом


	def clear(String segment, String pbdName, String pvbName, String arrayId, Sql sql) {
		try {
		sql.execute """
			DELETE FROM ${Sql.expand pbdName}.${Sql.expand segment}_EVENT WHERE ARRAY_ID = '${arrayId}'	
		"""
		sql.execute """
			DELETE FROM ${Sql.expand pbdName}.REQUEST_LOG WHERE ARRAY_ID = '${arrayId}'	
		"""
		sql.execute """
			DELETE FROM ${Sql.expand pvbName}.FILE_ARCHIVE WHERE ID = '${arrayId}'	
		"""
		sql.execute """
			DELETE FROM ${Sql.expand pvbName}.FILE_LOG WHERE FILE_ID = '${arrayId}'	
		"""
		}
	catch (Exception e) {
		log.info(e)
		}		
}

clear("AUTO", "PBD_TEST","PVB_TEST", "9b05af52-3703-498c-9b79-159709816741", sql)

// Закрыть соединение. Крайне рекомендуется
sql.close()</script></con:config></con:testStep><con:testStep type="groovy" name="DB_PGS_Scripts | БД PGS Скрипты" id="7ced3f2d-ad8d-4eb4-8b05-c52a43f8f990"><con:settings/><con:config><script>import groovy.sql.Sql
import java.sql.Driver
import org.codehaus.groovy.runtime.StackTraceUtils 

/* Пример подключения со считыванием строки подключения из переменной. 
 * В переменой записано: jdbc:postgresql://192.168.70.91:5432/INT_GATE,postgres,postgres,org.postgresql.Driver (деление строки по "," (см. свойства тест-суита)*/

def (conString, conUser, conPass, conDriver) = testRunner.testCase.testSuite.getPropertyValue( "dbConnectionVZI" ).split(",")
def sql = Sql.newInstance(conString,conUser,conPass,conDriver)
log.info ("Connection established")

sql.withStatement { 
	stmt -> stmt.queryTimeout = 30  // Установить Timeout. Программа ждет выполнения не более 30 с
} 

// Чтение значения из БД (INT_GATE)
def rows = sql.rows '''
	SELECT "NAME" FROM "INT_GATE"."FILES" ORDER BY "ID" DESC LIMIT 1;
'''

log.info(" Имя файла: " + rows[0][0])

// Вставка значения в БД 
lastRow = sql.rows '''SELECT "ID" FROM "INT_GATE"."PASSWORD" ORDER BY "ID" DESC LIMIT 1'''
nextId = lastRow[0][0] + 1

sql.execute """
INSERT INTO "INT_GATE"."PASSWORD" ("ID","LOGIN","PASSWORD") VALUES (${nextId},'newlogin','asdfwpdf');
"""
// Удаление значения из БД

sql.execute """
DELETE FROM "INT_GATE"."PASSWORD" WHERE "ID" = ${nextId};
"""

sql.close()
</script></con:config></con:testStep><con:testStep type="groovy" name="Data_Generation | Генерация данных" id="eab8abe2-fd9d-4f47-8ce8-0c402788a1bb"><con:settings/><con:config><script>import com.eviware.soapui.*
import java.util.*
import java.time.LocalDateTime
import java.time.Period
import java.time.format.DateTimeFormatter
import java.time.temporal.ChronoUnit
import java.util.concurrent.ThreadLocalRandom

//Генерация случайного UUID и запись данных в свойство "propertyName" тест-кейса
//Test step

testRunner.testCase.setPropertyValue( "propertyName", UUID.randomUUID().toString()) 
log.info ("Сгенерирован ID: " + testRunner.testCase.getPropertyValue( "propertyName"))

/******************************************************************************************************************/
//Генерация случайных чисел: ThreadLocalRandom.current().nextInt(min, max + 1)

randomNumber = ThreadLocalRandom.current().nextInt(1000, 1900+ 1)
log.info ("Случайное число: " + randomNumber.toString())

/******************************************************************************************************************/
/*Генерация случайной строки из символов
 * @param alphabet Алфавит, указанный в формате ('а'..'я').join. Пример: (('а'..'я')+('a'..'z')).join
 * @param n Количество символов
 */
def genString = { String alphabet, int n ->
  new ThreadLocalRandom().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

randomRusString = (genString((('а'..'и')+('к'..'щ')+('э'..'я')).join(), 9 )).capitalize() //заглавная буква
randomEngString = (genString(('a'..'z').join(), 6 )).toUpperCase() //все в верхний регистр
log.info (" Русская строка с большой буквы: " + randomRusString + ". Английская строка в верхнем регистре: " + randomEngString)

/******************************************************************************************************************/
//Выбор случайного значения из массива на примере ФИО

names = ["Бирабиджан","Наколюк","Миритафузий","Аленгодок","Мивираил","Леронад","Ихтигюк",
"Кпеорад","Инирал","Бекмамбет","Рокуват","Синарит","Золофт","Лакмитал","Сероквель","Кветиапин","Пиносол","Маример",
"Аквамарис","Грамиддин","Септолет","Спазмалгон"]
surnames = ["Диранов","Кемералюк","Вирифанов","Понураев","Белетореев","Сиктавкаров",
"Борокелев","Дамаранов","Искандеров","Колотузинов","Бомбушкин","Кравчюк", "Желторотиков", 
"Кавтноров", "Берамидтинов","Канареейков","Желопызин","Цикролюк","Вирифтеев","Туеноров","Хрокомаров","Жерониев"]
patronymics = ["Бирабиджанов", "Наколюкович", "Аленгодокович", "Леронадович", "Мирифтеевич", 
"Кпеопардович", "Ерифтеевич","Инимавович","Беронорович","Жеротдинович","Кемерович","Инитуарович","Берогорович","Илиносивич","Геромаронович"]

pdName = names[ThreadLocalRandom.current().nextInt(names.size)]
pdSurname = surnames[ThreadLocalRandom.current().nextInt(surnames.size)] 
pdPatronymic = patronymics[ThreadLocalRandom.current().nextInt(patronymics.size)]

log.info ("ФИО: " + pdSurname + " " + pdName + " " + pdPatronymic)

/******************************************************************************************************************/
//Генерация даты в разных форматах, java.time
/* Импорты для работы со временем
import java.time.LocalDateTime
import java.time.Period
import java.time.format.DateTimeFormatter
import java.time.temporal.ChronoUnit
import java.util.concurrent.ThreadLocalRandom
 */

log.info ("Сейчас: " + LocalDateTime.now())

// Прибавляем, отнимаем дни, часы
log.info ("Завтра: " + LocalDateTime.now().plusDays(1).toString())
log.info ("2 дня назад: " + LocalDateTime.now().minusDays(2).toString())
log.info ("Через 3 часа: " + LocalDateTime.now().plusHours(3).toString())

//Генерация случайной даты между сегодня и -14 дней и - 12 часов
date = LocalDateTime.now().minus(Period.ofDays((new ThreadLocalRandom().nextInt(14))))
dateHours = LocalDateTime.now().minusHours(new ThreadLocalRandom().nextInt(12))
DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy_MM_dd_HH_mm_ss_SSS")
log.info ("Случайная дата: " + formatter.format(date).toString())
log.info ("Случайная дата 12 ч: " + formatter.format(dateHours).toString())
</script></con:config></con:testStep><con:testStep type="groovy" name="Data_Base64 | (Де)сериализация base64" id="14c8bfa4-d429-4baf-87b6-dc0f24ee73e8"><con:settings/><con:config><script>import com.eviware.soapui.*

// Сериализация строк и запись base64 в переменную
String someVar = "Это переменная, детка!"

def baseString = """Абсолютно любая строка.
Или много строк.
Можно прямо сюда записать содержимое XML или CSV
Да чего угодно!
Даже переменные - ${someVar}
""" 

String encoded = baseString.getBytes( 'UTF-8' ).encodeBase64()
testRunner.testCase.setPropertyValue( "encoded_string", encoded )
log.info ("Результат, закодировано: " + encoded)

// Десериализация base64

String decoded = new String(encoded.decodeBase64(), "UTF-8")
log.info ("Результат, раскодировано: " + decoded)</script></con:config></con:testStep><con:testStep type="groovy" name="String_Operations | Операции со строками" id="09f03c71-f026-4dc5-b827-5e0ab968d174"><con:settings/><con:config><script>// Элементарные операции
String testString = "некоторая тестовая строка"
log.info ("Делаем первую букву заглавной: " + testString.capitalize())
log.info ("Делаем все буквы заглавными: " + testString.toUpperCase())
log.info ("Или строчными: " + "БОЛЬШАЯ БУКВА".toLowerCase())
log.info ("Повторить что-нибудь n раз: " + "Что-то".multiply(4))
log.info ("Длина строки: " + testString.length())
log.info ("Взять перые n символов строки: " + testString.take(6))

// Сортировать символы строки
def SortString(String input) {
        char[] charArray = input.replaceAll("[^а-яА-Яa-zA-Z0-9 ]+","").toCharArray() 
        Arrays.sort(charArray)
        String sortedString = new String(charArray)

        return sortedString.trim() 
    }

log.info ("Результат сортировки: " + SortString("Строчка для сортировки. Тут также может переменная, которая содержит, например, строку base64 или xml"))

// Транслитерация. Большой страшный метод. Берет строку, и переводит все символы из abcCyr в соответствующие символы abcLat

String transliterate(String message){
    char[] abcCyr = ['а','б','в','г','д','е','ё', 'ж','з','и','й','к','л','м','н','о','п','р','с','т','у','ф','х', 'ц','ч', 'ш','щ','ъ','ы','ь','э', 'ю','я',
    'А','Б','В','Г','Д','Е','Ё', 'Ж','З','И','Й','К','Л','М','Н','О','П','Р','С','Т','У','Ф','Х', 'Ц', 'Ч','Ш', 'Щ','Ъ','Ы','Ь','Э','Ю','Я',
    'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'
    ,'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
    String[] abcLat = ["A","Б","B","Г","D","E","E","Ж","3","И","Й","K","Л","M","H","O","П","P","C","T","Y","Ф","Х","Ц","Ч","Ш","Щ", "Ъ","Ы", "Ь","Э","Ю","Я",
    "A","Б","B","Г","D","E","E","Ж","3","И","Й","K","Л","M","H","O","П","P","C","T","Y","Ф","Х","Ц","Ч","Ш","Щ", "Ъ","Ы", "Ь","Э","Ю","Я",
    "A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z",
    "A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
    StringBuilder builder = new StringBuilder()
    for (int i = 0; i &lt; message.length(); i++) {
        for (int x = 0; x &lt; abcCyr.length; x++ ) {
            if (message.charAt(i) == abcCyr[x]) {
                builder.append(abcLat[x])
            }
        }
    }
    return builder.toString()
}

log.info (transliterate("Вот такая вот транслитерация, Muthafucka"))</script></con:config></con:testStep><con:testStep type="groovy" name="Properties | Операции со свойствами" id="12fa61c3-bb50-4012-bde6-5b9fcb24df79"><con:settings/><con:config><script>/*************************************************************************************/
// Установка свойств на уровне Проекта
testRunner.testCase.testSuite.project.setPropertyValue( "projectProperty" ,"Значение свойства")
// Установка свойств на уровне Тест-суита
testRunner.testCase.testSuite.setPropertyValue( "testSuiteProperty" ,"Значение свойства")
// Установка свойств на уровне Тест-кейса
testRunner.testCase.setPropertyValue( "testCaseProperty" ,"Значение свойства")

//Получение свойства на уровне Проекта
def someVar1 = testRunner.testCase.testSuite.project.getPropertyValue( "projectProperty" )
//Получение свойства на уровне Тест-суита
def someVar2 = testRunner.testCase.testSuite.getPropertyValue( "testSuiteProperty" )
//Получение свойства на уровне Тест-кейса
def someVar3 = testRunner.testCase.getPropertyValue( "testCaseProperty" )

/*************************************************************************************/
// Установка и получение свойств в Assertion (не сработает при запуске этого шага)

// Установка свойств на уровне Проекта
messageExchange.modelItem.testStep.testCase.testSuite.project.setPropertyValue( "projectProperty" ,"Значение свойства")
// Установка свойств на уровне Тест-суита
messageExchange.modelItem.testStep.testCase.testSuite.setPropertyValue( "testSuiteProperty" ,"Значение свойства")
// Установка свойств на уровне Тест-кейса
messageExchange.modelItem.testStep.testCase.setPropertyValue( "testCaseProperty" ,"Значение свойства")

//Получение свойства на уровне Проекта
def someVar4 = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue( "projectProperty" )
//Получение свойства на уровне Тест-суита
def someVar5 = messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue( "testSuiteProperty" )
//Получение свойства на уровне Тест-кейса
def someVar6 = messageExchange.modelItem.testStep.testCase.getPropertyValue( "testCaseProperty" )

/*************************************************************************************/
//</script></con:config></con:testStep><con:testStep type="groovy" name="Step_Operations | Операции с шагами" id="dfe5effd-32ca-4dca-a6ec-2945ec7f6c5c"><con:settings/><con:config><script>import com.eviware.soapui.support.UISupport

/********************************************************************************************/
// Включить/выключить шаги
// Список шагов тест-кейса
def currentTestCaseStepsList = testRunner.testCase.getTestStepList().name

//Деактивироать
testRunner.testCase.getTestStepByName("UI Examples | Примеры с UI").setDisabled(true)

//Активировать
testRunner.testCase.getTestStepByName("UI Examples | Примеры с UI").setDisabled(false)

/********************************************************************************************/
// Вызвать шаг из другого тест-кейса
def tCase = testRunner.testCase.testSuite.testCases["Example 1 | Пример 1: ПУД Пользователи"]
def tStep1 = tCase.testSteps["Запустить Mock-сервис"]
tStep1.run(testRunner, context)
def tStep2 = tCase.testSteps["Остановить mock-сервис"]
tStep2.run(testRunner, context)

// Вызвать текущий шаг (например, для реализации повтора шага несколько раз)
testStepName = context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel()
testRunner.gotoStepByName (testStepName)

/********************************************************************************************/
// Включение и отключение по условию, в данном случае - значение переменной stepActivationCondition тест-кейса
def testCaseStepsList = testRunner.testCase.getTestStepList().name
def stepActivationCondition = testRunner.testCase.getPropertyValue( "stepActivationCondition" )

if (stepActivationCondition == "true") {
    log.info(' Условие равно true, деактивируем шаги')
    testRunner.testCase.getTestStepByName("DB_Oracle_Scripts | БД Oracle Скрипты").setDisabled(true)
}
else if (stepActivationCondition == "false")  {
	log.info(' Условие false, активирем шаги')
	testRunner.testCase.getTestStepByName("DB_Oracle_Scripts | БД Oracle Скрипты").setDisabled(false)
}
else {
    log.info(' Значение переменной stepActivationCondition не установлено. Или я уже не знаю, что у вас там случилось. Зовите администратора. Поболтаем.')
}
/***************************************ПРИМЕР*****************************************************/
// Поменять endpoint для всех шагов теста + цикл теста по количеству IP. Приведен привер для сервиса шлюзов, который развернут на нескольких серверах. 
// Конечный путь до серсива можно заисать в переменную или указать прямо в коде (как здесь)

/*В ПЕРВОМ СКРИПТЕ ТЕСТ-КЕЙСА*/

/*Проверяем, какое значение счетчика в переменной counter
Получаем список IP-шников из переменной и конвертируем в список, прибавить 1 к счетчику

def i = Integer.parseInt(testRunner.testCase.getPropertyValue( "counter"))
def list = testRunner.testCase.getPropertyValue( "IP").split(',')
def teststeps = testRunner.testCase.getTestStepList()
    teststeps.each { teststep ->
        teststep.setPropertyValue('endpoint','http://' + list[i] + '/dataReader/services/DataReaderService?wsdl')        
    }
i++
testRunner.testCase.setPropertyValue( "counter", i.toString())*/

/*В последнем СКРИПТЕ ТЕСТ-КЕЙСА*/

/*def list = testRunner.testCase.getPropertyValue( "IP").split(',')
def i = Integer.parseInt(testRunner.testCase.getPropertyValue( "counter"))
log.info(list.size())

if (i &lt; list.size()) {       
    testRunner.gotoStepByName ('ИМЯ ПЕРВОГО СКРИПТА В ТЕСТ-КЕЙСЕ')
} else {       
    testRunner.testCase.setPropertyValue( "counter", new Integer(0).toString())
}*/

</script></con:config></con:testStep><con:testStep type="groovy" name="UI Examples | Примеры с UI" id="0986997a-159e-4cb9-8f63-e968f9f9f3c0"><con:settings/><con:config><script>import com.eviware.soapui.support.UISupport
import java.time.LocalDateTime

/********************************************************************************************/
currentDate = LocalDateTime.now().toString()

// Показать информацию 
UISupport.showInfoMessage("""Привет!
Это информационное сообщение
Сегодня ${currentDate} и все спокойно! (Надеюсь...)""")

// Показать ошибку
UISupport.showErrorMessage("""Внимание! 
Приближается астероид!""")

// Запрос на ввод данных
answer1 = UISupport.prompt("Введите что-нибудь","Окошко","Какая-то рандомная строка")

// Да или нет
answer2 = UISupport.confirm("Does this unit have a soul?","Question")
if (answer2 == true) {
	UISupport.showInfoMessage("^_^ &lt;3")
}
else {
	UISupport.showErrorMessage("Восстание машин! Инициация....")
}

/********************************************************************************************/
// Выбор среды запуска для тест-кейса (можно также написать для тест-суита, проекта)
def result = com.eviware.soapui.support.UISupport.prompt("Выберете среду запуска", "Среда запуска", ['Тестовая', 'СГК','САТ','Рабочая'])
switch(result) {
	case "Тестовая":
		testRunner.testCase.setPropertyValue( "ServiceEndpointVZH" ,"192.168.70.92:9080")
		break
	case "СГК":
		testRunner.testCase.setPropertyValue( "ServiceEndpointVZH" ,"10.10.34.31:9080")
		break
	case "САТ":
		testRunner.testCase.setPropertyValue( "ServiceEndpointVZH" ,"Какое-то значение")
		break
	case "Рабочая":
		testRunner.testCase.setPropertyValue( "ServiceEndpointVZH" ,"Какое-то рабочее значение")
		break
	default: 
            log.info("Неизвестное значение")
            break
}


</script></con:config></con:testStep><con:testStep type="request" name="Assertion Examples | Скрипты в запросе" id="dded2f33-2a22-4712-8862-923fa381c563"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AccessControlServiceSoapBinding</con:interface><con:operation>sendFileWriteRequest</con:operation><con:request name="Assertion Examples | Скрипты в запросе" id="3b0a3f6d-a87d-4da5-a629-5e0759b5c7e0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockAccessControlServiceSoapBinding</con:endpoint><con:request><![CDATA[<!--Для выполнения запроса ЗАПУСТИТЬ ACS MockService 
(Правой кнопкой -> Start Minimized) и выполнить этот запрос-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendFileWriteRequest>
         <transferMsg>
            <header>
               <createTime>${=java.time.LocalDateTime.now().toString()}</createTime>
               <creatorId>login</creatorId>
               <creatorType>1</creatorType>
               <dataType>
                  <data>1</data>
                  <transport>2</transport>
                  <format>0</format>
                  <method>1</method>
               </dataType>
               <messageId>${=java.util.UUID.randomUUID()}</messageId>
               <password>password</password>
               <transferSystemId>SoapUI</transferSystemId>
               <alLogin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" />
            </header>
            <transferData><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
			<ns6:FileMessage xmlns:ns5="http://www.egis-otb.ru/gtimport/" xmlns:ns6="http://www.egis-otb.ru/messaging/" xmlns:ns7="http://www.egis-otb.ru/datatypes/" xmlns:ns8="http://www.egis-otb.ru/data/pdp/" xmlns:ns10="http://www.egis-otb.ru/data/onsi/stations/" xmlns:ns9="http://www.egis-otb.ru/data/timetable/" xmlns:ns11="http://www.egis-otb.ru/data/onsi/operators/" xmlns:ns12="http://www.egis-otb.ru/query/" xmlns:ns2="http://www.egis-otb.ru/data/timetable/delta/" xmlns:ns3="http://www.egis-otb.ru/requests/" xmlns:ns4="http://www.egis-otb.ru/data/onsi/rail/countries/">
				<fileData>${#TestCase#fileBase64}</fileData>
				<fileInfo format="XML" fileName="fileName.xml"/>
			</ns6:FileMessage>]]]]>><![CDATA[
		</transferData>
         </transferMsg>
      </ejb:sendFileWriteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" id="a6a154db-f8ba-4360-9dd3-8574d005d7b6" name="Parse Response | Прочитать ответ"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

/***********************************************************************************************************/
// Извлечение xml из transferData и извлечение значения поля/атрибута
XmlHolder responseXmlHolder = new XmlHolder(messageExchange.getResponseContentAsXml())
XmlHolder xml = new XmlHolder(responseXmlHolder.getNodeValue("//*:transferData"))

log.info (" Извлеченное значение атрибута: " + xml.getNodeValue("//fileInfo/@createdAt"))

// Тоже самое в одну строку для tansferData:
transferData = new XmlHolder((new XmlHolder(messageExchange.getResponseContentAsXml())).getNodeValue("//*:transferData"))
log.info ( "Извлечение в одну строку: " + transferData.getNodeValue("//fileInfo/@createdAt"))

/***********************************************************************************************************/
// Получение и установка свойств
// Установка свойств на уровне Проекта
messageExchange.modelItem.testStep.testCase.testSuite.project.setPropertyValue( "projectProperty" ,"Значение свойства")
// Установка свойств на уровне Тест-суита
messageExchange.modelItem.testStep.testCase.testSuite.setPropertyValue( "testSuiteProperty" ,"Значение свойства")
// Установка свойств на уровне Тест-кейса
messageExchange.modelItem.testStep.testCase.setPropertyValue( "testCaseProperty" ,"Значение свойства")

//Получение свойства на уровне Проекта
def someVar4 = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue( "projectProperty" )
//Получение свойства на уровне Тест-суита
def someVar5 = messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue( "testSuiteProperty" )
//Получение свойства на уровне Тест-кейса
def someVar6 = messageExchange.modelItem.testStep.testCase.getPropertyValue( "testCaseProperty" )

/***********************************************************************************************************/
// Десериализация + сравнение данных

String fileDataRequest = xml.getNodeValue("//*:fileData")
String fileDataResponse = messageExchange.modelItem.testStep.testCase.getPropertyValue("fileBase64")

assert fileDataRequest == fileDataResponse 

def sortString(String input) {       
            char[] charArray = input.replaceAll("[^а-яА-Яa-zA-Z0-9 ]+","").toCharArray()
            Arrays.sort(charArray)
            String sortedString = new String(charArray).trim()
            return sortedString.trim()       
    }

String fileDataRequestDecoded = new String(fileDataRequest.decodeBase64(), "UTF-8")
String fileDataResponseDecoded = new String(fileDataResponse.decodeBase64(), "UTF-8")

assert sortString(fileDataRequestDecoded) == sortString(fileDataResponseDecoded)

/***********************************************************************************************************/
/* Получить XML из ответа, с использованием метода. 
 *  Если в transferData xml - возвращает  *  XmlHolder, из которого можно извлекать данные (getNodeValue и т.п.).
 *  Если в transferData нет xml - возвращает строку
 */
def getTransferData() {       
            XmlHolder responseXmlHolder = new XmlHolder(messageExchange.getResponseContentAsXml())
            String data = responseXmlHolder.getNodeValue("//*:transferData")
            if (data.contains("xml version")) {
                XmlHolder dataXml = new XmlHolder(data)                
                return dataXml
            }
            else {  
				return data  
			}  
}

xml = getTransferData()

log.info (" Излеченные archiveId (метод): " + xml.getNodeValue("//fileInfo/@archiveId"))
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="180e2161-257a-405d-8f1e-35e037238b60" name="Assert Examples | Примеры проверок"><con:configuration><scriptText>// Проверка, что в ответе присутствует текст + кастомный текст ошибки. В данном случае ответ читается целиком как строка (не как xml)
response = messageExchange.getResponseContent()
assert response.contains("transferData"), "Текст ошибки, который будет отображен, если условие проверки не выполнено"

// Проверка, что ответ НЕ содержит текст
assert !response.contains("некоторый текст"), "Текст ошибки, который будет отображен, если условие проверки не выполнено"

// Проверка с условием 
if (response.contains("transferData")) {
	log.info("В ответе есть искомый текст")
	assert true
	}
else {
	log.error("В ответе нету искомого текста")
	assert false
}

// Проверка времени выполнения
assert messageExchange.timeTaken &lt; 4000, "Долгое выполнение запроса"</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:request></con:config></con:testStep><con:properties><con:property><con:name>fileBase64</con:name><con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8bnM2OkRhdGFNZXNzYWdlIHhzaTp0eXBlPSJuczY6RXh0ZW5kZWREYXRhTWVzc2FnZSIgeG1sbnM6bnM1PSJodHRwOi8vd3d3LmVnaXMtb3RiLnJ1L2d0aW1wb3J0LyIgeG1sbnM6bnM2PSJodHRwOi8vd3d3LmVnaXMtb3RiLnJ1L21lc3NhZ2luZy8iIHhtbG5zOm5zNz0iaHR0cDovL3d3dy5lZ2lzLW90Yi5ydS9kYXRhdHlwZXMvIiB4bWxuczpuczg9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvZGF0YS9wZHAvIiB4bWxuczpuczEwPSJodHRwOi8vd3d3LmVnaXMtb3RiLnJ1L2RhdGEvb25zaS9zdGF0aW9ucy8iIHhtbG5zOm5zOT0iaHR0cDovL3d3dy5lZ2lzLW90Yi5ydS9kYXRhL3RpbWV0YWJsZS8iIHhtbG5zOm5zMTE9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvZGF0YS9vbnNpL29wZXJhdG9ycy8iIHhtbG5zOm5zMTI9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvcXVlcnkvIiB4bWxuczpuczI9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvZGF0YS90aW1ldGFibGUvZGVsdGEvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4bWxuczpuczM9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvcmVxdWVzdHMvIiB4bWxuczpuczQ9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvZGF0YS9vbnNpL3JhaWwvY291bnRyaWVzLyI+CiAgICA8ZGF0YUFycmF5IHJlY29yZENvdW50PSIxIj4KICAgICAgICA8ZGF0YSB4c2k6dHlwZT0ibnM4OkF1dG9QRFAiICBpZD0iNzdhMzczZjMtMjVjOS00NWJlLWJkMzktYzAzY2MwOWJhMGFiIiBhcnJheUlkPSI2YTVjMjJhNi0yN2JjLTRkZjUtYjY0ZS1hMzkwYThhMzAzYWMiPgogICAgICAgICAgICA8YXJyaXZlUGxhY2UgdmFsdWU9ItCi0YDQtdGC0LjQuSDQv9C+0YHQtdC70L7QuiIgaWQ9IjYzMzAyIi8+CiAgICAgICAgICAgIDxiaXJ0aGRhdGUgdmFsdWU9IjE5OTAtMDItMjUiLz4KICAgICAgICAgICAgPGNpdGl6ZW5zaGlwIHZhbHVlPSLQoNCe0KHQodCY0JnQodCa0JDQryDQpNCV0JTQldCg0JDQptCY0K8iIGlkPSIxODUiLz4KICAgICAgICAgICAgPGRlcGFydFBsYWNlIHZhbHVlPSLQn9C10YDQstGL0Lkg0L/QvtGB0LXQu9C+0LoiIGlkPSI2MzMwMCIvPgogICAgICAgICAgICA8ZG9jTnVtYmVyIHZhbHVlPSIxMzk3NjMzNTAwIi8+CiAgICAgICAgICAgIDxkb2NOdW1iZXJOb3JtYWwgdmFsdWU9IjEzOTc2MzM1MDAiLz4KICAgICAgICAgICAgPGRvY1R5cGUgdmFsdWU9IjAiIGlkPSIwIi8+CiAgICAgICAgICAgIDxnZW5kZXIgdmFsdWU9Ik0iIGlkPSIwIi8+CiAgICAgICAgICAgIDxuYW1lIHZhbHVlPSLQotC10YHRgjEiLz4KICAgICAgICAgICAgPG5hbWVOb3JtYWwgdmFsdWU9IlRFQ1QxIi8+CiAgICAgICAgICAgIDxvcGVyYXRpb25UeXBlIHZhbHVlPSIxIiBpZD0iMSIvPgogICAgICAgICAgICA8b3BlcmF0b3JJZCB2YWx1ZT0iMjAwMDA0IiBpZD0iMjQ3NzYiLz4KICAgICAgICAgICAgPHBhdHJvbnltaWMgdmFsdWU9ItCi0LXRgdGC0L7QstC40YcxIi8+CiAgICAgICAgICAgIDxwYXRyb255bWljTm9ybWFsIHZhbHVlPSJURUNUT0LQmNCnMSIvPgogICAgICAgICAgICA8cmVnaXN0ZXJUaW1lSVMgdmFsdWU9IjIwMTktMTAtMDJUMTA6MDA6MDAuMDAwWiIvPgogICAgICAgICAgICA8c3VybmFtZSB2YWx1ZT0i0KLQtdGB0YLQvtCy0YvQuTEiLz4KICAgICAgICAgICAgPHN1cm5hbWVOb3JtYWwgdmFsdWU9IlRFQ1RPQtCr0JkxIi8+CiAgICAgICAgICAgIDxhcnJpdmVEYXRlIHZhbHVlPSIyMDIwLTAxLTE1VDIwOjAwOjAwLjAwMCIvPgogICAgICAgICAgICA8ZGVwYXJ0RGF0ZSB2YWx1ZT0iMjAyMC0wMS0xNVQxMjowMDowMC4wMDAiLz4KICAgICAgICAgICAgPGFycml2ZURhdGVGYWN0IHZhbHVlPSIyMDIwLTAxLTE1VDE3OjEwOjAwLjAwMCIvPgogICAgICAgICAgICA8ZGVwYXJ0RGF0ZUZhY3QgdmFsdWU9IjIwMjAtMDEtMTVUMTI6MDQ6MDAuMDAwIi8+CiAgICAgICAgICAgIDxyb3V0ZSB2YWx1ZT0i0J/QtdGA0LLRi9C5IC0g0KLRgNC10YLQuNC5INC/0L7RgdC10LvQutC4Ii8+CiAgICAgICAgICAgIDxvcGVyYXRvclZlcnNpb24gdmFsdWU9IjEiLz4KICAgICAgICAgICAgPHJvdXRlVHlwZSB2YWx1ZT0iMCIgaWQ9IjAiLz4KICAgICAgICAgICAgPHJlY1R5cGUgdmFsdWU9IjEiIGlkPSIxIi8+CiAgICAgICAgICAgIDxyYW5rIHZhbHVlPSLQv9Cw0YHRgdCw0LbQuNGAIi8+CiAgICAgICAgICAgIDxkb2N1bWVudEFkZGl0aW9uYWxJbmZvIHZhbHVlPSLQv9C+0LTQu9C10LbQuNGCINC30LDQvNC10L3QtSIvPgogICAgICAgICAgICA8YnV5RGF0ZSB2YWx1ZT0iMjAyMC0wMS0xNVQxMjowNDowMC4wMDAiLz4KICAgICAgICAgICAgPHBsYWNlcyB2YWx1ZT0iMSIvPgogICAgICAgICAgICA8cmVzZXJ2ZWRTZWF0c0NvdW50Lz4KICAgICAgICAgICAgPHRlcm1OdW1PclN1cm5hbWUgdmFsdWU9IjM0NSIvPgogICAgICAgICAgICA8Z3J6IHZhbHVlPSLQktChMjciLz4KICAgICAgICAgICAgPG1vZGVsIHZhbHVlPSLQndCV0J7Qn9Cb0JDQnSA1NC8wIi8+CiAgICAgICAgICAgIDxwbGFjZUlkIHZhbHVlPSIyMDAwMDEiIGlkPSI0MTAyIi8+CiAgICAgICAgPC9kYXRhPgogICAgICAgPC9kYXRhQXJyYXk+CiAgICA8d3JvbmdEYXRhQXJyYXkgcmVjb3JkQ291bnQ9IjAiLz4KPC9uczY6RGF0YU1lc3NhZ2U+</con:value></con:property><con:property><con:name>propertyName</con:name><con:value>43eef5d8-a68b-4e4d-a42e-91af09e853fa</con:value></con:property><con:property><con:name>encoded_string</con:name><con:value>0JDQsdGB0L7Qu9GO0YLQvdC+INC70Y7QsdCw0Y8g0YHRgtGA0L7QutCwLgrQmNC70Lgg0LzQvdC+0LPQviDRgdGC0YDQvtC6LgrQnNC+0LbQvdC+INC/0YDRj9C80L4g0YHRjtC00LAg0LfQsNC/0LjRgdCw0YLRjCDRgdC+0LTQtdGA0LbQuNC80L7QtSBYTUwg0LjQu9C4IENTVgrQlNCwINGH0LXQs9C+INGD0LPQvtC00L3QviEK0JTQsNC20LUg0L/QtdGA0LXQvNC10L3QvdGL0LUgLSDQrdGC0L4g0L/QtdGA0LXQvNC10L3QvdCw0Y8sINC00LXRgtC60LAhCg==</con:value></con:property><con:property><con:name>stepActivationCondition</con:name><con:value>true</con:value></con:property><con:property><con:name>testCaseProperty</con:name><con:value>Значение свойства</con:value></con:property><con:property><con:name>ServiceEndpointVZH</con:name><con:value>Какое-то значение</con:value></con:property><con:property><con:name>IP</con:name><con:value>192.168.70.95:9080,192.168.70.95:9081,192.168.70.95:9082</con:value></con:property><con:property><con:name>counter</con:name><con:value>0</con:value></con:property></con:properties><con:reportParameters/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:testCase><con:testCase id="f2597362-290d-4110-889e-fa42adf073fe" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Example 1 | Пример 1: ПУД Пользователи" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Запустить Mock-сервис" id="e87765f5-dc56-42e6-8b74-f82e83d37f4e"><con:settings/><con:config><script>// Запуск mock-сервиса
context.testCase.testSuite.project.getMockServiceByName("ACS MockService SOAP").start()</script></con:config></con:testStep><con:testStep type="groovy" name="Подготовить данные" id="e905a4a8-9e9c-4bc5-ada3-15b09a81c18e"><con:settings/><con:config><script>import com.eviware.soapui.*

//*****USER ****//
def userFile = """[GrovyExampleUser]
ReadAccessPVB = 1
ReadLogPBD = 1
CheckRec = 1
ReadPDPAccessPBD = 1
EmergencyStartPVB = 1
ReadLogPVB = 1
WriteAccessPBD = 1
SearchAccessPVB = 1
WriteWrongRecPBD = 1
IntermediaryAccess = 1
ControlACS = 1
WriteAccessPVB = 1
ReadWrongRecPBD = 1
Password = 123456"""

String userFileEncoded = userFile.getBytes( 'UTF-8' ).encodeBase64()
testRunner.testCase.setPropertyValue( "userFile", userFileEncoded )</script></con:config></con:testStep><con:testStep type="request" name="Создать пользователя" id="0f4c7641-c675-470b-9b1a-c820638efb29"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AccessControlServiceSoapBinding</con:interface><con:operation>sendCommand</con:operation><con:request name="Создать пользователя" id="a0ca544f-0af4-4562-8361-79d645508164"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockAccessControlServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendCommand>
         <transferMsg>
            <header>
               <createTime>${=java.time.LocalDateTime.now().toString()}</createTime>
               <creatorId>user</creatorId>
               <creatorType>1</creatorType>
               <dataType>
                  <data>3</data>
                  <transport>0</transport>
                  <format>0</format>
                  <method>1</method>
               </dataType>
               <messageId>${=java.util.UUID.randomUUID()}</messageId>
               <password>password</password>
               <transferSystemId>SoapUI-User</transferSystemId>
               <alLogin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" />
            </header>
            <transferData><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
			<ns8:Command command="createUser" xmlns:ns5="http://www.egis-otb.ru/messaging/" xmlns:ns6="http://www.egis-otb.ru/data/pdp/" xmlns:ns7="http://www.egis-otb.ru/query/" xmlns:ns8="http://www.egis-otb.ru/messaging/acs/commands/" xmlns:ns9="http://www.egis-otb.ru/logs/" xmlns:ns2="http://www.egis-otb.ru/data/timetable/delta/" xmlns:ns3="http://usists.ru/asteros/data" xmlns:ns4="http://www.egis-otb.ru/data/onsi/rail/countries/">
				<param>${#TestCase#userFile}</param>
			</ns8:Command>]]]]>><![CDATA[
		</transferData>
         </transferMsg>
      </ejb:sendCommand>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Simple Contains" id="bcc281d2-f01b-4f65-a755-7cf488373131" name="Пользователь создан"><con:configuration><token>Пользователь создан успешно</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:request></con:config></con:testStep><con:testStep type="request" name="Прочитать пользователя" id="92a3a309-6de8-4d95-83be-3c78884e0b26"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AccessControlServiceSoapBinding</con:interface><con:operation>sendCommand</con:operation><con:request name="Прочитать пользователя" id="2c9a5874-9ec5-4f22-a75e-b0337f1e7518"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockAccessControlServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendCommand>
         <transferMsg>
            <header>
               <createTime>${=java.time.LocalDateTime.now().toString()}</createTime>
               <creatorId>user</creatorId>
               <creatorType>1</creatorType>
               <dataType>
                  <data>3</data>
                  <transport>0</transport>
                  <format>0</format>
                  <method>1</method>
               </dataType>
               <messageId>${=java.util.UUID.randomUUID()}</messageId>
               <password>password</password>
               <transferSystemId>SoapUI-User</transferSystemId>
               <alLogin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" />
            </header>
            <transferData><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
			<ns8:Command command="getUser"  xmlns:ns8="http://www.egis-otb.ru/messaging/acs/commands/"> 
				 <param>GrovyExampleUser</param>
			</ns8:Command>]]]]>><![CDATA[
		</transferData>
         </transferMsg>
      </ejb:sendCommand>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Simple NotContains" id="0e3640bb-1bda-48d8-82f9-030443e39138" name="Пользователь найден"><con:configuration><token>не найден</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="1f8bb336-c228-4ef4-a9b4-99966fdeeb3a" name="Проверка данных"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.GroovyUtils

def SortString(String input) {
		char[] charArray = input.replaceAll("[^a-zA-Z0-9 ]+","").toCharArray()
		Arrays.sort(charArray)
		String sortedString = new String(charArray)

		return sortedString.trim()
	}
	
responseXmlHolder = new XmlHolder(messageExchange.getResponseContentAsXml())
dataXml = responseXmlHolder.getNodeValue("//*:transferData")
log.info dataXml
if (!dataXml.contains("не найден")) {
	String responseDecoded = new String(dataXml.decodeBase64(), "UTF-8")
	//log.info ("Декодирован ответ: " + responseDecoded)
	def userFile = messageExchange.modelItem.testStep.testCase.getPropertyValue( "userFile" )
	String userFileDecoded = new String(userFile.decodeBase64(), "UTF-8")
	log.info ("Декодировано что отправляли: " + SortString(responseDecoded))	
		
	assert SortString(responseDecoded) == SortString(userFileDecoded)
}
else {
	assert !dataXml.contains("не найден"), "Пользователь не найден"
}

</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:request></con:config></con:testStep><con:testStep type="request" name="Удалить пользователя" id="15beeb17-ea4a-400f-9590-a2aa72417470"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AccessControlServiceSoapBinding</con:interface><con:operation>sendCommand</con:operation><con:request name="Удалить пользователя" id="da88d2eb-85a1-4a28-b872-0dc506a53593"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockAccessControlServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendCommand>
         <transferMsg>
            <header>
               <createTime>${=java.time.LocalDateTime.now().toString()}</createTime>
               <creatorId>user</creatorId>
               <creatorType>1</creatorType>
               <dataType>
                  <data>3</data>
                  <transport>0</transport>
                  <format>0</format>
                  <method>1</method>
               </dataType>
               <messageId>${=java.util.UUID.randomUUID()}</messageId>
               <password>password</password>
               <transferSystemId>SoapUI-User</transferSystemId>
               <alLogin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" />
            </header>
            <transferData><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
			<ns8:Command command="deleteUser"  xmlns:ns8="http://www.egis-otb.ru/messaging/acs/commands/">
				<param>GrovyExampleUser</param>
			</ns8:Command>]]]]>><![CDATA[
		</transferData>
         </transferMsg>
      </ejb:sendCommand>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Simple Contains" id="e188844a-a9b5-49b3-af31-acb2ac8e42e3" name="Профиль удален"><con:configuration><token>Профиль пользователя удален успешно</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:request></con:config></con:testStep><con:testStep type="groovy" name="Остановить mock-сервис" id="d99f3586-49d4-4aef-a2c7-141dea079de0"><con:settings/><con:config><script>// Остановка mock-сервиса
context.testCase.testSuite.project.getMockServiceByName("ACS MockService SOAP").getMockRunner().stop()</script></con:config></con:testStep><con:setupScript>testCase.testSuite.project.getMockServiceByName("ACS MockService SOAP").start()</con:setupScript><con:tearDownScript>testCase.testSuite.project.getMockServiceByName("ACS MockService SOAP").getMockRunner().stop()</con:tearDownScript><con:properties><con:property><con:name>userFile</con:name><con:value>W0dyb3Z5RXhhbXBsZVVzZXJdClJlYWRBY2Nlc3NQVkIgPSAxClJlYWRMb2dQQkQgPSAxCkNoZWNrUmVjID0gMQpSZWFkUERQQWNjZXNzUEJEID0gMQpFbWVyZ2VuY3lTdGFydFBWQiA9IDEKUmVhZExvZ1BWQiA9IDEKV3JpdGVBY2Nlc3NQQkQgPSAxClNlYXJjaEFjY2Vzc1BWQiA9IDEKV3JpdGVXcm9uZ1JlY1BCRCA9IDEKSW50ZXJtZWRpYXJ5QWNjZXNzID0gMQpDb250cm9sQUNTID0gMQpXcml0ZUFjY2Vzc1BWQiA9IDEKUmVhZFdyb25nUmVjUEJEID0gMQpQYXNzd29yZCA9IDEyMzQ1Ng==</con:value></con:property><con:property><con:name>some</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:testCase><con:testCase id="fdd45e71-29ff-41da-a3b2-9289c24c577a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Example 2 | Пример 2: ПУД Работа с данными, цикл" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Запустить Mock-сервис" id="beb07b85-93a8-4a82-b087-1758d19e95de"><con:settings/><con:config><script>// Запуск mock-сервиса
context.testCase.testSuite.project.getMockServiceByName("ACS MockService SOAP").start()</script></con:config></con:testStep><con:testStep type="groovy" name="Подготовить данные" id="8562d779-7975-4cd2-bafc-d751c4e31f21"><con:settings/><con:config><script>import com.eviware.soapui.SoapUI
import java.util.concurrent.ThreadLocalRandom

def i = Integer.parseInt(testRunner.testCase.getPropertyValue( "counter"))

names = ["Алексей","Константин","Василий","Иннокентий","Игорь","Иван","Виталий","Александр","Вячеслав","Роман","Геннадий","Максим","Павел","Юрий","Владимир"]
surnames = ["Сколов","Смоктуновский","Иванов","Журавлев","Осин","Веллер","Михайлов","Леонов","Миралюк","Пронин","Грозов","Путин", "Воробьев", "Аистов", "Орлов"]
patronymics =["Геннадьевич", "Александрович", "Иванович", "Михайлович", "Алексеевич", "Игоревич", "Юриевич","Максимович"]

pdName = names[ThreadLocalRandom.current().nextInt(names.size)]
pdSurname = surnames[ThreadLocalRandom.current().nextInt(surnames.size)] 
pdPatronymic = patronymics[ThreadLocalRandom.current().nextInt(patronymics.size)]
def docNumber = (int)(1000000000 + 9000000000*Math.random())

testRunner.testCase.setPropertyValue( "Name", pdName )
testRunner.testCase.setPropertyValue( "Surname", pdSurname)
testRunner.testCase.setPropertyValue( "Patronymic", pdPatronymic )

testRunner.testCase.setPropertyValue( "NameNormal", pdName.toUpperCase() )
testRunner.testCase.setPropertyValue( "SurnameNormal", pdSurname.toUpperCase() )
testRunner.testCase.setPropertyValue( "PatronymicNormal", pdPatronymic.toUpperCase() )

testRunner.testCase.setPropertyValue( "DocNumber", docNumber.toString() )

i++
testRunner.testCase.setPropertyValue( "counter", i.toString())

</script></con:config></con:testStep><con:testStep type="request" name="Записать данные" id="64bf21d6-7cdc-42c9-b81c-73311771344f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AccessControlServiceSoapBinding</con:interface><con:operation>sendDataWriteRequest</con:operation><con:request name="Записать данные" id="8c55b3f8-2a34-4f00-b592-70eea7d0ff5e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockAccessControlServiceSoapBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendDataWriteRequest>
         <transferMsg>
            <header>
               <createTime>${=java.time.LocalDateTime.now().toString()}</createTime>
               <creatorId>user</creatorId>
               <creatorType>3</creatorType>
               <dataType>
                  <data>1</data>
                  <transport>2</transport>
                  <format>0</format>
                  <method>1</method>
               </dataType>
               <messageId>${=java.util.UUID.randomUUID()}</messageId>
               <password>password</password>
               <transferSystemId>SoapUI-WriteData</transferSystemId>
               <alLogin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" />
            </header>
            <transferData><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns6:DataMessage xsi:type="ns6:ExtendedDataMessage" xmlns:ns5="http://www.egis-otb.ru/gtimport/" xmlns:ns6="http://www.egis-otb.ru/messaging/" xmlns:ns7="http://www.egis-otb.ru/datatypes/" xmlns:ns8="http://www.egis-otb.ru/data/pdp/" xmlns:ns10="http://www.egis-otb.ru/data/onsi/stations/" xmlns:ns9="http://www.egis-otb.ru/data/timetable/" xmlns:ns11="http://www.egis-otb.ru/data/onsi/operators/" xmlns:ns12="http://www.egis-otb.ru/query/" xmlns:ns2="http://www.egis-otb.ru/data/timetable/delta/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns3="http://www.egis-otb.ru/requests/" xmlns:ns4="http://www.egis-otb.ru/data/onsi/rail/countries/">
    <dataArray recordCount="1">
        <data xsi:type="ns8:AutoPDP"  id="${=java.util.UUID.randomUUID()}" arrayId="${=java.util.UUID.randomUUID()}">
            <arrivePlace value="Третий поселок" id="63302"/>
            <birthdate value="1990-02-25"/>
            <citizenship value="РОССИЙСКАЯ ФЕДЕРАЦИЯ" id="185"/>
            <departPlace value="Первый поселок" id="63300"/>
            <docNumber value="${#TestCase#DocNumber}"/>
            <docNumberNormal value="${#TestCase#DocNumber}"/>
            <docType value="0" id="0"/>
            <gender value="M" id="0"/>
            <name value="${#TestCase#Name}"/>
            <nameNormal value="${#TestCase#NameNormal}"/>
            <operationType value="1" id="1"/>
            <operatorId value="200004" id="24776"/>
            <patronymic value="${#TestCase#Patronymic}"/>
            <patronymicNormal value="${#TestCase#PatronymicNormal}"/>
            <registerTimeIS value="2019-10-02T10:00:00.000Z"/>
            <surname value="${#TestCase#Surname}"/>
            <surnameNormal value="${#TestCase#SurnameNormal}"/>
            <arriveDate value="${=new java.text.SimpleDateFormat("yyyy-MM-dd").format(new Date())}T20:00:00.000Z"/>
            <departDate value="${=new java.text.SimpleDateFormat("yyyy-MM-dd").format(new Date())}T12:00:00.000Z"/>
            <arriveDateFact value="${=new java.text.SimpleDateFormat("yyyy-MM-dd").format(new Date())}T17:10:00.000Z"/>
            <departDateFact value="${=new java.text.SimpleDateFormat("yyyy-MM-dd").format(new Date())}T12:04:00.000Z"/>
            <route value="Первый - Третий поселки"/>
            <operatorVersion value="1"/>
            <routeType value="0" id="0"/>
            <recType value="1" id="1"/>
            <rank value="пассажир"/>
            <documentAdditionalInfo value="подлежит замене"/>
            <buyDate value="${=java.time.LocalDateTime.now().minusHours(3).toString()}"/>
            <places value="1"/>
            <reservedSeatsCount/>
            <termNumOrSurname value="345"/>
            <grz value="ВС27"/>
            <model value="НЕОПЛАН 54/0"/>
            <placeId value="200001" id="4102"/>
        </data>
       </dataArray>
    <wrongDataArray recordCount="0"/>
</ns6:DataMessage>]]]]>><![CDATA[</transferData>
         </transferMsg>
      </ejb:sendDataWriteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Simple Contains" id="40a0125d-e60a-4705-a448-5abcaaf82f8a" name="Данные записаны"><con:configuration><token>Записано корректных записей 1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:request></con:config></con:testStep><con:testStep type="delay" name="Delay" id="598250fc-ad34-4f9c-8824-e4fc9c40e487"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="counter" id="f9a8c5f3-d00b-4046-99a4-92bf4455a0ed"><con:settings/><con:config><script>def i = Integer.parseInt(testRunner.testCase.getPropertyValue( "counter"))
def s = Integer.parseInt(testRunner.testCase.getPropertyValue( "NumberOfRecords"))

if (i &lt; s) {       
    testRunner.gotoStepByName ('Подготовить данные')
} else {       
    testRunner.testCase.setPropertyValue( "counter", new Integer(0).toString())
}</script></con:config></con:testStep><con:testStep type="groovy" name="Остановить mock-сервис" id="501529b2-87b2-43a7-a7d8-d7f16fcae1a6"><con:settings/><con:config><script>
// Остановка mock-сервиса
context.testCase.testSuite.project.getMockServiceByName("ACS MockService SOAP").getMockRunner().stop()</script></con:config></con:testStep><con:properties><con:property><con:name>NumberOfRecords</con:name><con:value>3</con:value></con:property><con:property><con:name>counter</con:name><con:value>0</con:value></con:property><con:property><con:name>Name</con:name><con:value>Вячеслав</con:value></con:property><con:property><con:name>Surname</con:name><con:value>Пронин</con:value></con:property><con:property><con:name>Patronymic</con:name><con:value>Игоревич</con:value></con:property><con:property><con:name>NameNormal</con:name><con:value>ВЯЧЕСЛАВ</con:value></con:property><con:property><con:name>SurnameNormal</con:name><con:value>ПРОНИН</con:value></con:property><con:property><con:name>PatronymicNormal</con:name><con:value>ИГОРЕВИЧ</con:value></con:property><con:property><con:name>DocNumber</con:name><con:value>2147483647</con:value></con:property></con:properties><con:reportParameters/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:testCase><con:testCase id="f1261fb4-542d-46e7-ad1c-19f444f9fb00" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Example 3 | Получение ОКАТО с UI" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Ввести код ОКАТО" id="f4d85c74-61b3-4d13-8de9-d5f1ca75c7b9"><con:settings/><con:config><script>import com.eviware.soapui.support.UISupport

// Метод .take(11) берет только первые 11 цифр, введенных пользователем
String answer = UISupport.prompt("Введите код ОКАТО","Справочник ОКАТО","01204859001").take(11)

/* Проверяем, что ответ пользователя введен и это не пустое значение. Если да, то повторяем запрос на ввод
 *  Если код ОКАТо менне 11 цифр, то добавляем нули (0.multiply) до 11 (11 - количество введенных символов) и записываем в свойства тест-кейса 
 */
if ((answer == "") || (answer == " "))  {
	UISupport.showErrorMessage("""Не указано значение.
	Значение не может быть пустым""")
	testStepName = context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel()
	testRunner.gotoStepByName (testStepName)
} else {
	addZero = '0'.multiply(11-answer.length()) + answer
	testRunner.testCase.setPropertyValue( "okato_code", addZero )
}


</script></con:config></con:testStep><con:testStep type="request" name="Запрос и отображение ОКАТО" id="6ff9dc3d-94ce-40ce-b1a1-cf4e517e1c2d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OkatoServiceBinding</con:interface><con:operation>processRequest</con:operation><con:request name="Запрос и отображение ОКАТО" id="2b195e64-801f-439b-b443-979e84aaa44d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.70.92:9081/Services/OkatoService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:int="http://www.egis-otb.ru/services/interfaces/">
   <soapenv:Header/>
   <soapenv:Body>
      <int:processRequest>        
         <arg0>           
            <header>
                <createTime>${=java.time.LocalDateTime.now().toString()}</createTime>
               <creatorId/>
               <creatorType>2</creatorType>
               <dataType>                  
                  <data>100</data>
                  <transport>2</transport>
                  <format>0</format>
                  <method>4</method>
               </dataType>
               <messageId>${=java.util.UUID.randomUUID()}</messageId>
               <password/>
               <transferSystemId>SoapUI</transferSystemId>
               <alLogin/>
            </header>
            <transferData><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<query xmlns="http://www.egis-otb.ru/query/simple">
	<filters type="and" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<filter xsi:type="BinaryFilter" operation="eq" negate="false">
			<attr xsi:type="Attribute" name="code" />
			<right xsi:type="Constant">
				<value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema">${#TestCase#okato_code}</value>
			</right>
		</filter>
	</filters>
</query>]]]]>><![CDATA[</transferData>
         </arg0>
      </int:processRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6968b24c-dce4-4de8-9b44-530f59f5f60c"/><con:assertion type="GroovyScriptAssertion" id="608a7571-98af-42f0-a313-e676c7093cde" name="Проверка и чтение"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.GroovyUtils
import com.eviware.soapui.support.UISupport

responseData = messageExchange.getResponseContent()
response = new XmlHolder(messageExchange.getResponseContentAsXml())
def input = messageExchange.modelItem.testStep.testCase.getPropertyValue( "okato_code" )


if (!responseData.contains("recordCount=\"0\"")) {
	cdataXml = response.getNodeValue("//*:transferData")
	cdataXmlHolder = new XmlHolder(cdataXml)

	code = cdataXmlHolder.getNodeValue("//*:dataArray/data/@code")
	id = cdataXmlHolder.getNodeValue("//*:dataArray/data/@id")
	name = cdataXmlHolder.getNodeValue("//*:dataArray/data/@name")
	
	UISupport.showInfoMessage("""Информация по: ${input}. Успешно найдена запись:	
Код: ${code}
Идентификатор записи: ${id}
Наименование: ${name}
""")
}
else {
	assert responseData.contains('recordCount="0"'), "ОКАТО не найден"
	UISupport.showErrorMessage("""ОКАТО не найден.
	Повторно запустите тест и убедитесь, что вводите 
	корректное название или код""")
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:request></con:config></con:testStep><con:properties><con:property><con:name>okato_code</con:name><con:value>01204859001</con:value></con:property></con:properties><con:reportParameters/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:testCase><con:testCase id="321ddeda-fd7f-45bf-8af1-3937b025a6ad" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Example 4 | Отправка файла в обработчик" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Запустить Mock-сервис" id="d40074ed-ddd0-450e-ac85-f05fa7ac2d68"><con:settings/><con:config><script>// Запуск mock-сервиса
context.testCase.testSuite.project.getMockServiceByName("ParserManager MockService").start()</script></con:config></con:testStep><con:testStep type="groovy" name="Генерация файла" id="55e3b950-0d8d-4cfe-b8c2-d6066b99b13d"><con:settings/><con:config><script><![CDATA[import com.eviware.soapui.support.GroovyUtils
import java.io.File 
import java.util.concurrent.ThreadLocalRandom
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter
import java.io.BufferedWriter

/* Файл можно сгенерировать из готового текста. 
 * Плюсы: не нужно держать файлы в папке с проектом. Минусы: неудобно для больших файлов
*/
  
date = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd")).toString()
random = (ThreadLocalRandom.current().nextInt(900, 998 + 1)).toString()

generatedFile = """<?xml version="1.0" encoding="UTF-8"?>
<imp:Import createdAt="${date}T00:00Z" dataType="OPERATOR"
	recordCount="1" transportSegment="AUTO" xmlns:dt="http://www.egis-otb.ru/datatypes/"
	xmlns:imp="http://www.egis-otb.ru/gtimport/" xmlns:opers="http://www.egis-otb.ru/data/onsi/operators/"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.egis-otb.ru/gtimport/ ru.egisotb.import.xsd http://www.egis-otb.ru/data/onsi/operators/ ru.egisotb.data.onsi.operators.xsd "
	xsi:type="imp:FullImport">
	<entry sourceId="PmiOp${random}" xsi:type="imp:ImportedEntry">
		<data xsi:type="opers:Operator" 
			contactDepartment="СЛУЖБА ЭКСПЛУАТАЦИИ"
			contactEmail="PASS@SITE.RU" 
			contactFax="84955084340" 
			contactLastname="Иванович"
			contactName="Иван" 
			contactPerson="НАЧАЛЬНИК ИВО" 
			contactPhone="84951234567"
			contactPost="143900 МОСКОВСКАЯ ОБЛАСТЬ Г. БАЛАШИХА  УЛ. ЗАПАДНАЯ Д. 7"
			contactSurname="Иванов" 
			egrul="1027701025879" 
			latName="A1377"
			lawAddress="143900 МОСКОВСКАЯ ОБЛАСТЬ Г. БАЛАШИХА  УЛ. ЗАПАДНАЯ Д. 7"
			name="АВТОКОЛОННА  1377  Г. БАЛАШИХА ФИЛИАЛ ГУП МОСТРАНСАВТО"
			shortName="А1377" 
			egisId="28${random}">
			<actualPeriod from="2020-01-02T00:00Z" to="2099-09-01T00:00Z" xsi:type="dt:ImportDateTimePeriod"/>
			<country value="Российская Федерация" xsi:type="dt:SimpleDictionaryValue" />
		</data>
	</entry>	
</imp:Import>
"""

String encodedFile = generatedFile.getBytes( 'UTF-8' ).encodeBase64()
testRunner.testCase.setPropertyValue("encodedFile", encodedFile)

/* Строку выше запишем в файл и сохраним рядом с файлом проекта*/
  
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath

def writeToFile(String folder, String fileName, String inputString) {
	OutputStream outputStream  = new FileOutputStream(folder + "/" + fileName)
	OutputStreamWriter outputStreamWriter = new OutputStreamWriter(outputStream, "UTF-8")
	outputStreamWriter.write(inputString)
	outputStreamWriter.flush()
	outputStreamWriter.close()
}

writeToFile(projectPath,"upload.xml",generatedFile)
log.info(" Создан файл: " + projectPath + "\\" + "upload.xml")
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Файл из папки" id="e5394ec2-9d4b-41ca-9c64-2c73177fb6cf"><con:settings/><con:config><script>/*
 * Берем файл из папки с проектом. Плюсы: закидываем новые версии файлов, скрипт всегда работает
 * Минусы: не удобно вносить правки
 */
import com.eviware.soapui.support.GroovyUtils
import java.io.File

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
String encodedFileFromFS = (new File(groovyUtils.projectPath + "/" + "upload.xml" )
						.getText("UTF-8"))
						.getBytes( 'UTF-8' ).encodeBase64()

testRunner.testCase.setPropertyValue( "encodedFileFromFS" , encodedFileFromFS)
</script></con:config></con:testStep><con:testStep type="request" name="Отправка сгенерированного файла" id="cdf945ad-c8fe-44f1-8510-afe8b2458dcc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ParserManagerBinding</con:interface><con:operation>parseFile</con:operation><con:request name="Отправка сгенерированного файла" id="58a8e674-37d0-46aa-9cf4-1fd5e6cdac68"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockParserManagerBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pman="http://www.egis-otb.ru/general/pmanager">
   <soapenv:Header/>
   <soapenv:Body>
      <pman:parseFile>
         <!--Optional:-->
         <arg0>
            <!--Optional:-->
            <header>
               <createTime>${=java.time.LocalDateTime.now().toString()}</createTime>
               <creatorId>user</creatorId>
               <creatorType>2</creatorType>
               <dataType>                  
                  <data>151</data>
                  <transport>2</transport>
                  <format>0</format>
                  <method>1</method>
               </dataType>
               <messageId>${=java.util.UUID.randomUUID()}</messageId>
               <password>password</password>
               <transferSystemId>SoapUI</transferSystemId>
               <alLogin>user</alLogin>
            </header>
            <transferData><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns10:Message xsi:type="ns6:FileMessage" source="soapUI" xmlns:ns5="http://www.egis-otb.ru/data/onsi/rail/countries/" xmlns:ns6="http://www.egis-otb.ru/messaging/" xmlns:ns7="http://www.egis-otb.ru/data/pdp/" xmlns:ns8="http://www.egis-otb.ru/query/" xmlns:ns10="http://www.egis-otb.ru/datatypes/" xmlns:ns9="http://www.egis-otb.ru/messaging/acs/commands/" xmlns:ns11="http://www.egis-otb.ru/logs/" xmlns:ns12="http://www.egis-otb.ru/acs/errors/" xmlns:ns2="http://www.egis-otb.ru/data/timetable/delta/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns3="http://www.egis-otb.ru/requests/" xmlns:ns4="http://usists.ru/asteros/data">
    <fileData>${#TestCase#encodedFile}</fileData>
    <fileInfo xsi:type="ns10:FileInfoExtended" rewrite="true" ackSrc="5" size="256" format="plain:xml:0" fileName="20000_${=java.time.LocalDateTime.now().format(java.time.format.DateTimeFormatter.ofPattern("yyyy_MM_dd_HH_mm_ss_SSS")).toString()}.xml" createdAt="${=java.time.LocalDateTime.now().format(java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm'Z'")).toString()}"/>
</ns10:Message>]]]]>><![CDATA[</transferData>
         </arg0>
      </pman:parseFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e9b8135d-4360-4bd3-8c1e-93a2217b5f47"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:request></con:config></con:testStep><con:testStep type="request" name="Отправка из папки" id="a1626821-2a72-4b50-b971-62fa7d8059c0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ParserManagerBinding</con:interface><con:operation>parseFile</con:operation><con:request name="Отправка из папки" id="5fc0de3f-b515-4486-b09d-2376c06b21ac"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockParserManagerBinding</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:pman="http://www.egis-otb.ru/general/pmanager">
   <soapenv:Header/>
   <soapenv:Body>
      <pman:parseFile>
         <!--Optional:-->
         <arg0>
            <!--Optional:-->
            <header>
               <createTime>${=java.time.LocalDateTime.now().toString()}</createTime>
               <creatorId>user</creatorId>
               <creatorType>2</creatorType>
               <dataType>                  
                  <data>151</data>
                  <transport>2</transport>
                  <format>0</format>
                  <method>1</method>
               </dataType>
               <messageId>${=java.util.UUID.randomUUID()}</messageId>
               <password>password</password>
               <transferSystemId>SoapUI</transferSystemId>
               <alLogin>user</alLogin>
            </header>
            <transferData><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns10:Message xsi:type="ns6:FileMessage" source="soapUI" xmlns:ns5="http://www.egis-otb.ru/data/onsi/rail/countries/" xmlns:ns6="http://www.egis-otb.ru/messaging/" xmlns:ns7="http://www.egis-otb.ru/data/pdp/" xmlns:ns8="http://www.egis-otb.ru/query/" xmlns:ns10="http://www.egis-otb.ru/datatypes/" xmlns:ns9="http://www.egis-otb.ru/messaging/acs/commands/" xmlns:ns11="http://www.egis-otb.ru/logs/" xmlns:ns12="http://www.egis-otb.ru/acs/errors/" xmlns:ns2="http://www.egis-otb.ru/data/timetable/delta/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns3="http://www.egis-otb.ru/requests/" xmlns:ns4="http://usists.ru/asteros/data">
    <fileData>${#TestCase#encodedFileFromFS}</fileData>
    <fileInfo xsi:type="ns10:FileInfoExtended" rewrite="true" ackSrc="5" size="256" format="plain:xml:0" fileName="20000_${=java.time.LocalDateTime.now().format(java.time.format.DateTimeFormatter.ofPattern("yyyy_MM_dd_HH_mm_ss_SSS")).toString()}.xml" createdAt="${=java.time.LocalDateTime.now().format(java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm'Z'")).toString()}"/>
</ns10:Message>]]]]>><![CDATA[</transferData>
         </arg0>
      </pman:parseFile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="65f6bf26-f2a1-4c1b-a6b0-4b8e11f44edf"/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:request></con:config></con:testStep><con:testStep type="groovy" name="Остановить mock-сервис" id="ecc60ab6-9e5c-412a-85b0-161e3d3eeaa3"><con:settings/><con:config><script>// Остановка mock-сервиса
context.testCase.testSuite.project.getMockServiceByName("ParserManager MockService").getMockRunner().stop()</script></con:config></con:testStep><con:properties><con:property><con:name>encodedFile</con:name><con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGltcDpJbXBvcnQgY3JlYXRlZEF0PSIyMDIxLTEwLTExVDAwOjAwWiIgZGF0YVR5cGU9Ik9QRVJBVE9SIgoJcmVjb3JkQ291bnQ9IjEiIHRyYW5zcG9ydFNlZ21lbnQ9IkFVVE8iIHhtbG5zOmR0PSJodHRwOi8vd3d3LmVnaXMtb3RiLnJ1L2RhdGF0eXBlcy8iCgl4bWxuczppbXA9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvZ3RpbXBvcnQvIiB4bWxuczpvcGVycz0iaHR0cDovL3d3dy5lZ2lzLW90Yi5ydS9kYXRhL29uc2kvb3BlcmF0b3JzLyIKCXhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiCgl4c2k6c2NoZW1hTG9jYXRpb249Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvZ3RpbXBvcnQvIHJ1LmVnaXNvdGIuaW1wb3J0LnhzZCBodHRwOi8vd3d3LmVnaXMtb3RiLnJ1L2RhdGEvb25zaS9vcGVyYXRvcnMvIHJ1LmVnaXNvdGIuZGF0YS5vbnNpLm9wZXJhdG9ycy54c2QgIgoJeHNpOnR5cGU9ImltcDpGdWxsSW1wb3J0Ij4KCTxlbnRyeSBzb3VyY2VJZD0iUG1pT3A5MjUiIHhzaTp0eXBlPSJpbXA6SW1wb3J0ZWRFbnRyeSI+CgkJPGRhdGEgeHNpOnR5cGU9Im9wZXJzOk9wZXJhdG9yIiAKCQkJY29udGFjdERlcGFydG1lbnQ9ItCh0JvQo9CW0JHQkCDQrdCa0KHQn9Cb0KPQkNCi0JDQptCY0JgiCgkJCWNvbnRhY3RFbWFpbD0iUEFTU0BTSVRFLlJVIiAKCQkJY29udGFjdEZheD0iODQ5NTUwODQzNDAiIAoJCQljb250YWN0TGFzdG5hbWU9ItCY0LLQsNC90L7QstC40YciCgkJCWNvbnRhY3ROYW1lPSLQmNCy0LDQvSIgCgkJCWNvbnRhY3RQZXJzb249ItCd0JDQp9CQ0JvQrNCd0JjQmiDQmNCS0J4iIAoJCQljb250YWN0UGhvbmU9Ijg0OTUxMjM0NTY3IgoJCQljb250YWN0UG9zdD0iMTQzOTAwINCc0J7QodCa0J7QktCh0JrQkNCvINCe0JHQm9CQ0KHQotCsINCTLiDQkdCQ0JvQkNCo0JjQpdCQICDQo9CbLiDQl9CQ0J/QkNCU0J3QkNCvINCULiA3IgoJCQljb250YWN0U3VybmFtZT0i0JjQstCw0L3QvtCyIiAKCQkJZWdydWw9IjEwMjc3MDEwMjU4NzkiIAoJCQlsYXROYW1lPSJBMTM3NyIKCQkJbGF3QWRkcmVzcz0iMTQzOTAwINCc0J7QodCa0J7QktCh0JrQkNCvINCe0JHQm9CQ0KHQotCsINCTLiDQkdCQ0JvQkNCo0JjQpdCQICDQo9CbLiDQl9CQ0J/QkNCU0J3QkNCvINCULiA3IgoJCQluYW1lPSLQkNCS0KLQntCa0J7Qm9Ce0J3QndCQICAxMzc3ICDQky4g0JHQkNCb0JDQqNCY0KXQkCDQpNCY0JvQmNCQ0Jsg0JPQo9CfINCc0J7QodCi0KDQkNCd0KHQkNCS0KLQniIKCQkJc2hvcnROYW1lPSLQkDEzNzciIAoJCQllZ2lzSWQ9IjI4OTI1Ij4KCQkJPGFjdHVhbFBlcmlvZCBmcm9tPSIyMDIwLTAxLTAyVDAwOjAwWiIgdG89IjIwOTktMDktMDFUMDA6MDBaIiB4c2k6dHlwZT0iZHQ6SW1wb3J0RGF0ZVRpbWVQZXJpb2QiLz4KCQkJPGNvdW50cnkgdmFsdWU9ItCg0L7RgdGB0LjQudGB0LrQsNGPINCk0LXQtNC10YDQsNGG0LjRjyIgeHNpOnR5cGU9ImR0OlNpbXBsZURpY3Rpb25hcnlWYWx1ZSIgLz4KCQk8L2RhdGE+Cgk8L2VudHJ5PgkKPC9pbXA6SW1wb3J0Pgo=</con:value></con:property><con:property><con:name>encodedFileFromFS</con:name><con:value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGltcDpJbXBvcnQgY3JlYXRlZEF0PSIyMDIxLTEwLTExVDAwOjAwWiIgZGF0YVR5cGU9Ik9QRVJBVE9SIgoJcmVjb3JkQ291bnQ9IjEiIHRyYW5zcG9ydFNlZ21lbnQ9IkFVVE8iIHhtbG5zOmR0PSJodHRwOi8vd3d3LmVnaXMtb3RiLnJ1L2RhdGF0eXBlcy8iCgl4bWxuczppbXA9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvZ3RpbXBvcnQvIiB4bWxuczpvcGVycz0iaHR0cDovL3d3dy5lZ2lzLW90Yi5ydS9kYXRhL29uc2kvb3BlcmF0b3JzLyIKCXhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiCgl4c2k6c2NoZW1hTG9jYXRpb249Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvZ3RpbXBvcnQvIHJ1LmVnaXNvdGIuaW1wb3J0LnhzZCBodHRwOi8vd3d3LmVnaXMtb3RiLnJ1L2RhdGEvb25zaS9vcGVyYXRvcnMvIHJ1LmVnaXNvdGIuZGF0YS5vbnNpLm9wZXJhdG9ycy54c2QgIgoJeHNpOnR5cGU9ImltcDpGdWxsSW1wb3J0Ij4KCTxlbnRyeSBzb3VyY2VJZD0iUG1pT3A5MjUiIHhzaTp0eXBlPSJpbXA6SW1wb3J0ZWRFbnRyeSI+CgkJPGRhdGEgeHNpOnR5cGU9Im9wZXJzOk9wZXJhdG9yIiAKCQkJY29udGFjdERlcGFydG1lbnQ9ItCh0JvQo9CW0JHQkCDQrdCa0KHQn9Cb0KPQkNCi0JDQptCY0JgiCgkJCWNvbnRhY3RFbWFpbD0iUEFTU0BTSVRFLlJVIiAKCQkJY29udGFjdEZheD0iODQ5NTUwODQzNDAiIAoJCQljb250YWN0TGFzdG5hbWU9ItCY0LLQsNC90L7QstC40YciCgkJCWNvbnRhY3ROYW1lPSLQmNCy0LDQvSIgCgkJCWNvbnRhY3RQZXJzb249ItCd0JDQp9CQ0JvQrNCd0JjQmiDQmNCS0J4iIAoJCQljb250YWN0UGhvbmU9Ijg0OTUxMjM0NTY3IgoJCQljb250YWN0UG9zdD0iMTQzOTAwINCc0J7QodCa0J7QktCh0JrQkNCvINCe0JHQm9CQ0KHQotCsINCTLiDQkdCQ0JvQkNCo0JjQpdCQICDQo9CbLiDQl9CQ0J/QkNCU0J3QkNCvINCULiA3IgoJCQljb250YWN0U3VybmFtZT0i0JjQstCw0L3QvtCyIiAKCQkJZWdydWw9IjEwMjc3MDEwMjU4NzkiIAoJCQlsYXROYW1lPSJBMTM3NyIKCQkJbGF3QWRkcmVzcz0iMTQzOTAwINCc0J7QodCa0J7QktCh0JrQkNCvINCe0JHQm9CQ0KHQotCsINCTLiDQkdCQ0JvQkNCo0JjQpdCQICDQo9CbLiDQl9CQ0J/QkNCU0J3QkNCvINCULiA3IgoJCQluYW1lPSLQkNCS0KLQntCa0J7Qm9Ce0J3QndCQICAxMzc3ICDQky4g0JHQkNCb0JDQqNCY0KXQkCDQpNCY0JvQmNCQ0Jsg0JPQo9CfINCc0J7QodCi0KDQkNCd0KHQkNCS0KLQniIKCQkJc2hvcnROYW1lPSLQkDEzNzciIAoJCQllZ2lzSWQ9IjI4OTI1Ij4KCQkJPGFjdHVhbFBlcmlvZCBmcm9tPSIyMDIwLTAxLTAyVDAwOjAwWiIgdG89IjIwOTktMDktMDFUMDA6MDBaIiB4c2k6dHlwZT0iZHQ6SW1wb3J0RGF0ZVRpbWVQZXJpb2QiLz4KCQkJPGNvdW50cnkgdmFsdWU9ItCg0L7RgdGB0LjQudGB0LrQsNGPINCk0LXQtNC10YDQsNGG0LjRjyIgeHNpOnR5cGU9ImR0OlNpbXBsZURpY3Rpb25hcnlWYWx1ZSIgLz4KCQk8L2RhdGE+Cgk8L2VudHJ5PgkKPC9pbXA6SW1wb3J0Pgo=</con:value></con:property></con:properties><con:reportParameters/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:testCase><con:testCase id="c56156eb-23a3-44b1-b0b3-ad5d64eaede2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Example 5 | Отправка файла в FTP" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Сформировать файл" id="4682525d-6d76-406b-95fa-5fc49fc3e98e"><con:settings/><con:config><script>import com.eviware.soapui.support.GroovyUtils
import java.io.File 
import java.util.concurrent.ThreadLocalRandom
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter
import java.io.BufferedWriter

date = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd")).toString()

generatedFile = """surname;name;patronymic;birthday;docType;docNumber;documentAdditionalInfo;departPlace;arrivePlace;routeType;departDate;departDateFact;citizenship;gender;recType;rank;operationType;operatorId;placeId;route;places;buyDate;termNumOrSurname;arriveDate;arriveDateFact;grz;model;registerTimeIS;operatorVersion
Воробьёв;Андрей;Сергеевич;1971-11-15;0;8602328040;;Горицы;Кижи;0;${date}T23:30Z;;РОССИЯ;M;1;;1;20100;22000;М197;4;${date}T01:00Z;345;${date}T10:30Z;${date}T10:30Z;;;${date}T13:00Z;1"""

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath

def writeToFile(String folder, String fileName, String inputString) {
	OutputStream outputStream  = new FileOutputStream(folder + "/" + fileName)
	OutputStreamWriter outputStreamWriter = new OutputStreamWriter(outputStream, "UTF-8")
	outputStreamWriter.write(inputString)
	outputStreamWriter.flush()
	outputStreamWriter.close()
}

writeToFile(projectPath,"upload.csv",generatedFile)

log.info(" Создан файл: " + projectPath + "\\" + "upload.csv")</script></con:config></con:testStep><con:testStep type="groovy" name="Отправить в FTP" id="c3702f0e-142a-4d27-8e7d-599d8c994838"><con:settings/><con:config><script>import org.apache.commons.net.ftp.FTP
import org.apache.commons.net.ftp.FTPClient
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter
import java.util.concurrent.ThreadLocalRandom
import java.io.File 

// Параметры подключения к FTP-серверу записаны в одной переменной в формате "ftpHost, ftpPort, ftpUser, ftpPassword"
// Например: 192.168.70.95,21021,auto_test_ru,123456
ftpConString = testRunner.testCase.getPropertyValue( "ftp" )

// Путь к папке с этим проектом
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath

/* Метод для загрузки файла на FTP
 *  
 *  @param ftpConString String Строка подключения к FTP (в формате "ftpHost, ftpPort, ftpUser, ftpPassword")
 *  @param folder String Папка, откуда берем файл
 *  @param fileName String Имя файла на ФС, который будем переименовывать и загружать
 *  @param ext String Разрешения файла ("xml","csv" и т.п.). Без точки
 *  
 */ 
def uploadToFtp(String ftpConString, String folder, String fileName, String ext) {	
	def (ftpHost, ftpPort, ftpUser, ftpPassword) = ftpConString.split(",")
	//генерируем имя файла за последние 12 ч
	uploadFileName = "20000_" 	+ 
					LocalDateTime.now()
					.minusHours(new ThreadLocalRandom().nextInt(12))
					.format(DateTimeFormatter.ofPattern("yyyy_MM_dd_HH_mm_ss_SSS")).toString() + "." + ext
	try {					
		// Читаем файл из 
		File localFile = new File(folder + "/" + fileName)	
		InputStream inputStream = new FileInputStream(localFile)
		
		FTPClient ftpClient = new FTPClient()	
	
		ftpClient.connect(ftpHost, Integer.parseInt(ftpPort))
		ftpClient.login(ftpUser, ftpPassword)
		ftpClient.enterLocalPassiveMode()
		ftpClient.setFileType(FTP.BINARY_FILE_TYPE)
		
		boolean done = ftpClient.storeFile(uploadFileName, inputStream)
		inputStream.close()
		if (done) {
                log.info("Файл успешно загружен на сервер ${ftpHost}:${ftpPort} с именем ${uploadFileName}")              
            } 
		} catch (IOException ex) {
            	log.error("Ошибка: " + ex.getMessage())
            	ex.printStackTrace()
       	 } finally {
            try {
                if (ftpClient.isConnected()) {
                    ftpClient.logout()
                    ftpClient.disconnect()
                }
            } catch (IOException ex) {
                ex.printStackTrace()
            	}
		}
	}
	
uploadToFtp(ftpConString, projectPath, "upload.csv", "csv")
</script></con:config></con:testStep><con:properties><con:property><con:name>ftp</con:name><con:value>192.168.70.95,21021,auto_test_ru,123456</con:value></con:property></con:properties><con:reportParameters/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:testCase><con:properties><con:property><con:name>dbConnectionVZO</con:name><con:value>jdbc:oracle:thin:@192.168.70.90:1521:orcl,testadmin,oracle,oracle.jdbc.OracleDriver</con:value></con:property><con:property><con:name>testSuiteProperty</con:name><con:value>Значение свойства</con:value></con:property><con:property><con:name>dbConnectionVZI</con:name><con:value>jdbc:postgresql://192.168.70.91:5432/INT_GATE,postgres,postgres,org.postgresql.Driver</con:value></con:property></con:properties><con:reportParameters/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:testSuite><con:mockService id="4d703fca-19bb-4132-a5b1-d1e7fc50a9b4" port="8088" path="/mockAccessControlServiceSoapBinding" host="localhost" name="ACS MockService SOAP" bindToHostOnly="false" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:dataSources/><con:headerValidator/><con:mockOperation name="sendCheckRecordsRequest" id="931e9804-6d23-44df-8c4a-011741cdde7d" interface="AccessControlServiceSoapBinding" operation="sendCheckRecordsRequest"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchXPath/><con:routeScript/><con:response name="Response 1" id="207fd65d-7f4f-4add-a069-35e63f77f9db" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendCheckRecordsRequestResponse>
         <sendCheckRecordsRequestReturn>
            <!--Optional:-->
            <header>
               <createTime>?</createTime>
               <creatorId>?</creatorId>
               <creatorType>?</creatorType>
               <dataType>
                  <!--Optional:-->
                  <data>?</data>
                  <transport>?</transport>
                  <format>?</format>
                  <method>?</method>
               </dataType>
               <messageId>?</messageId>
               <password>?</password>
               <transferSystemId>?</transferSystemId>
               <alLogin>?</alLogin>
            </header>
            <transferData>?</transferData>
         </sendCheckRecordsRequestReturn>
      </ejb:sendCheckRecordsRequestResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendCheckRecordsRequest"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendCommand" id="e1debf04-304c-4435-a9dd-b15668356578" interface="AccessControlServiceSoapBinding" operation="sendCommand"><con:settings/><con:defaultResponse>userCreatedResponse</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.GroovyUtils

def request = new XmlHolder( mockRequest.requestContent )
holder = request.getNodeValue("//*:transferData")

if (holder.contains( "createUser" ))
	return "userCreatedResponse"
else if (holder.contains( "getUser" ))
	return "userReadResponse"
else if (holder.contains( "deleteUser" ))
	return "userDeletedResponse"
else
	return "errorResponse"</con:dispatchPath><con:dispatchXPath/><con:routeScript/><con:response name="userCreatedResponse" id="43fd67f2-127a-41c3-8c74-98a1004694eb" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <soapenv:Header/>
   <soapenv:Body>
      <p155:sendCommandResponse xmlns:p155="http://ejb.acs.egis.inforion.ru">
         <sendCommandReturn>
            <header>
               <createTime>${=java.time.LocalDateTime.now().toString()}</createTime>
               <creatorId>pud</creatorId>
               <creatorType>2</creatorType>
               <dataType>
                  <data>3</data>
                  <transport>0</transport>
                  <format>0</format>
                  <method>1</method>
               </dataType>
               <messageId>${=java.util.UUID.randomUUID()}</messageId>
               <password xsi:nil="true"/>
               <transferSystemId>Подсистема управления доступом</transferSystemId>
               <alLogin xsi:nil="true"/>
            </header>
            <transferData>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;ns10:Message xsi:type="ns6:AckMessage" status="true" errCode="0" description="Пользователь создан успешно" xmlns:ns5="http://www.egis-otb.ru/data/onsi/rail/countries/" xmlns:ns6="http://www.egis-otb.ru/messaging/" xmlns:ns7="http://www.egis-otb.ru/data/pdp/" xmlns:ns8="http://www.egis-otb.ru/query/" xmlns:ns10="http://www.egis-otb.ru/datatypes/" xmlns:ns9="http://www.egis-otb.ru/messaging/acs/commands/" xmlns:ns11="http://www.egis-otb.ru/logs/" xmlns:ns12="http://www.egis-otb.ru/acs/errors/" xmlns:ns2="http://www.egis-otb.ru/data/timetable/delta/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns3="http://www.egis-otb.ru/requests/" xmlns:ns4="http://usists.ru/asteros/data"/></transferData>
         </sendCommandReturn>
      </p155:sendCommandResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendCommand"/></con:response><con:response name="userReadResponse" id="dfb23b31-af51-44d5-b8bd-70a737dd8f4c" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <soapenv:Header/>
   <soapenv:Body>
      <p155:sendCommandResponse xmlns:p155="http://ejb.acs.egis.inforion.ru">
         <sendCommandReturn>
            <header>
               <createTime>${=java.time.LocalDateTime.now().toString()}</createTime>
               <creatorId>pud</creatorId>
               <creatorType>2</creatorType>
               <dataType>
                  <data>3</data>
                  <transport>0</transport>
                  <format>0</format>
                  <method>1</method>
               </dataType>
               <messageId>${=java.util.UUID.randomUUID()}</messageId>
               <password xsi:nil="true"/>
               <transferSystemId>Подсистема управления доступом</transferSystemId>
               <alLogin xsi:nil="true"/>
            </header>
            <transferData>W0dyb3Z5RXhhbXBsZVVzZXJdClJlYWRBY2Nlc3NQVkIgPSAxClJlYWRMb2dQQkQgPSAxCkNoZWNrUmVjID0gMQpSZWFkUERQQWNjZXNzUEJEID0gMQpFbWVyZ2VuY3lTdGFydFBWQiA9IDEKUmVhZExvZ1BWQiA9IDEKV3JpdGVBY2Nlc3NQQkQgPSAxClNlYXJjaEFjY2Vzc1BWQiA9IDEKV3JpdGVXcm9uZ1JlY1BCRCA9IDEKSW50ZXJtZWRpYXJ5QWNjZXNzID0gMQpDb250cm9sQUNTID0gMQpXcml0ZUFjY2Vzc1BWQiA9IDEKUmVhZFdyb25nUmVjUEJEID0gMQpQYXNzd29yZCA9IDEyMzQ1Ng==</transferData>
         </sendCommandReturn>
      </p155:sendCommandResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendCommand"/></con:response><con:response name="userDeletedResponse" id="1a31a72a-0a29-485f-939b-82d471f16c94" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <soapenv:Header/>
   <soapenv:Body>
      <p155:sendCommandResponse xmlns:p155="http://ejb.acs.egis.inforion.ru">
         <sendCommandReturn>
            <header>
               <createTime>${=java.time.LocalDateTime.now().toString()}</createTime>
               <creatorId>pud</creatorId>
               <creatorType>2</creatorType>
               <dataType>
                  <data>3</data>
                  <transport>0</transport>
                  <format>0</format>
                  <method>1</method>
               </dataType>
               <messageId>${=java.util.UUID.randomUUID()}</messageId>
               <password xsi:nil="true"/>
               <transferSystemId>Подсистема управления доступом</transferSystemId>
               <alLogin xsi:nil="true"/>
            </header>
            <transferData>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;ns10:Message xsi:type="ns6:AckMessage" status="true" errCode="0" description="Профиль пользователя удален успешно" xmlns:ns5="http://www.egis-otb.ru/data/onsi/rail/countries/" xmlns:ns6="http://www.egis-otb.ru/messaging/" xmlns:ns7="http://www.egis-otb.ru/data/pdp/" xmlns:ns8="http://www.egis-otb.ru/query/" xmlns:ns10="http://www.egis-otb.ru/datatypes/" xmlns:ns9="http://www.egis-otb.ru/messaging/acs/commands/" xmlns:ns11="http://www.egis-otb.ru/logs/" xmlns:ns12="http://www.egis-otb.ru/acs/errors/" xmlns:ns2="http://www.egis-otb.ru/data/timetable/delta/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns3="http://www.egis-otb.ru/requests/" xmlns:ns4="http://usists.ru/asteros/data"/></transferData>
         </sendCommandReturn>
      </p155:sendCommandResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendCommand"/></con:response><con:response name="errorResponse" id="5893e528-34b4-4961-91e5-57858e2871a5" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <error>В mock-сервисе отсутствует ответ на данный запрос</error>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendCommand"/></con:response><con:dispatchConfig xsi:type="con:MockOperationQueryMatchDispatch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:mockOperation><con:mockOperation name="sendDataReadNotPDPRequest" id="339fd496-9767-4d7f-bdef-b6442b71449b" interface="AccessControlServiceSoapBinding" operation="sendDataReadNotPDPRequest"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchXPath/><con:routeScript/><con:response name="Response 1" id="db6a81c3-a6bb-4859-8cd9-1a3c8ba6e7ce" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendDataReadNotPDPRequestResponse>
         <sendDataReadNotPDPRequestReturn>
            <!--Optional:-->
            <header>
               <createTime>?</createTime>
               <creatorId>?</creatorId>
               <creatorType>?</creatorType>
               <dataType>
                  <!--Optional:-->
                  <data>?</data>
                  <transport>?</transport>
                  <format>?</format>
                  <method>?</method>
               </dataType>
               <messageId>?</messageId>
               <password>?</password>
               <transferSystemId>?</transferSystemId>
               <alLogin>?</alLogin>
            </header>
            <transferData>?</transferData>
         </sendDataReadNotPDPRequestReturn>
      </ejb:sendDataReadNotPDPRequestResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendDataReadNotPDPRequest"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendDataReadPDPRequest" id="95c8b7b9-977e-4f02-bb8f-a9c17988370b" interface="AccessControlServiceSoapBinding" operation="sendDataReadPDPRequest"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchXPath/><con:routeScript/><con:response name="Response 1" id="6b354fcc-82f8-4dc4-9f72-e2a0d4485e5e" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendDataReadPDPRequestResponse>
         <sendDataReadPDPRequestReturn>
            <!--Optional:-->
            <header>
               <createTime>?</createTime>
               <creatorId>?</creatorId>
               <creatorType>?</creatorType>
               <dataType>
                  <!--Optional:-->
                  <data>?</data>
                  <transport>?</transport>
                  <format>?</format>
                  <method>?</method>
               </dataType>
               <messageId>?</messageId>
               <password>?</password>
               <transferSystemId>?</transferSystemId>
               <alLogin>?</alLogin>
            </header>
            <transferData>?</transferData>
         </sendDataReadPDPRequestReturn>
      </ejb:sendDataReadPDPRequestResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendDataReadPDPRequest"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendDataReadStatRequest" id="07b835c2-7ce7-4d96-8375-79bafaf42d3e" interface="AccessControlServiceSoapBinding" operation="sendDataReadStatRequest"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchXPath/><con:routeScript/><con:response name="Response 1" id="08f60a28-7c91-4276-a28e-e0e6480faca7" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendDataReadStatRequestResponse>
         <sendDataReadStatRequestReturn>
            <!--Optional:-->
            <header>
               <createTime>?</createTime>
               <creatorId>?</creatorId>
               <creatorType>?</creatorType>
               <dataType>
                  <!--Optional:-->
                  <data>?</data>
                  <transport>?</transport>
                  <format>?</format>
                  <method>?</method>
               </dataType>
               <messageId>?</messageId>
               <password>?</password>
               <transferSystemId>?</transferSystemId>
               <alLogin>?</alLogin>
            </header>
            <transferData>?</transferData>
         </sendDataReadStatRequestReturn>
      </ejb:sendDataReadStatRequestResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendDataReadStatRequest"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendDataWriteRequest" id="6d5d70cc-cf9c-4ebf-b16d-1435519e0e0e" interface="AccessControlServiceSoapBinding" operation="sendDataWriteRequest"><con:settings/><con:defaultResponse>successResponse</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchXPath/><con:routeScript/><con:response name="successResponse" id="2b8c7ecf-a879-4342-8666-da477d42fb4a" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <soapenv:Header/>
   <soapenv:Body>
      <p155:sendDataWriteRequestResponse xmlns:p155="http://ejb.acs.egis.inforion.ru">
         <sendDataWriteRequestReturn>
            <header>
               <createTime>${=java.time.LocalDateTime.now().toString()}</createTime>
               <creatorId>pud</creatorId>
               <creatorType>2</creatorType>
               <dataType>
                  <data>3</data>
                  <transport>2</transport>
                  <format>0</format>
                  <method>1</method>
               </dataType>
               <messageId>${=java.util.UUID.randomUUID()}</messageId>
               <password xsi:nil="true"/>
               <transferSystemId>Подсистема управления доступом</transferSystemId>
               <alLogin xsi:nil="true"/>
            </header>
            <transferData><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns10:Message xsi:type="ns6:AckMessage" status="true" errCode="0" description="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;
&lt;ns12:acsErrorList xmlns:ns5=&quot;http://www.egis-otb.ru/data/onsi/rail/countries/&quot; xmlns:ns6=&quot;http://www.egis-otb.ru/messaging/&quot; xmlns:ns7=&quot;http://www.egis-otb.ru/data/pdp/&quot; xmlns:ns8=&quot;http://www.egis-otb.ru/query/&quot; xmlns:ns10=&quot;http://www.egis-otb.ru/datatypes/&quot; xmlns:ns9=&quot;http://www.egis-otb.ru/messaging/acs/commands/&quot; xmlns:ns11=&quot;http://www.egis-otb.ru/logs/&quot; xmlns:ns12=&quot;http://www.egis-otb.ru/acs/errors/&quot; xmlns:ns2=&quot;http://www.egis-otb.ru/data/timetable/delta/&quot; xmlns:ns3=&quot;http://www.egis-otb.ru/requests/&quot; xmlns:ns4=&quot;http://usists.ru/asteros/data&quot;&gt;
    &lt;error&gt;
        &lt;errorCode&gt;0&lt;/errorCode&gt;
        &lt;message&gt;Записано корректных записей 1/некорректных записей 0&lt;/message&gt;
    &lt;/error&gt;
&lt;/ns12:acsErrorList&gt;
" source="pud" xmlns:ns5="http://www.egis-otb.ru/data/onsi/rail/countries/" xmlns:ns6="http://www.egis-otb.ru/messaging/" xmlns:ns7="http://www.egis-otb.ru/data/pdp/" xmlns:ns8="http://www.egis-otb.ru/query/" xmlns:ns10="http://www.egis-otb.ru/datatypes/" xmlns:ns9="http://www.egis-otb.ru/messaging/acs/commands/" xmlns:ns11="http://www.egis-otb.ru/logs/" xmlns:ns12="http://www.egis-otb.ru/acs/errors/" xmlns:ns2="http://www.egis-otb.ru/data/timetable/delta/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns3="http://www.egis-otb.ru/requests/" xmlns:ns4="http://usists.ru/asteros/data"/>]]]]>><![CDATA[</transferData>
         </sendDataWriteRequestReturn>
      </p155:sendDataWriteRequestResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendDataWriteRequest"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendFileArchiveRequest" id="8beee6ba-603d-44b9-b2b7-8a9b1c358606" interface="AccessControlServiceSoapBinding" operation="sendFileArchiveRequest"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchXPath/><con:routeScript/><con:response name="Response 1" id="fd709983-d5d7-4ea7-b97d-31cc19584072" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendFileArchiveRequestResponse>
         <sendFileArchiveRequestReturn>
            <!--Optional:-->
            <header>
               <createTime>?</createTime>
               <creatorId>?</creatorId>
               <creatorType>?</creatorType>
               <dataType>
                  <!--Optional:-->
                  <data>?</data>
                  <transport>?</transport>
                  <format>?</format>
                  <method>?</method>
               </dataType>
               <messageId>?</messageId>
               <password>?</password>
               <transferSystemId>?</transferSystemId>
               <alLogin>?</alLogin>
            </header>
            <transferData>?</transferData>
         </sendFileArchiveRequestReturn>
      </ejb:sendFileArchiveRequestResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendFileArchiveRequest"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendFileReadRequest" id="07a17ac7-33b7-47e5-af82-417d51a9e87c" interface="AccessControlServiceSoapBinding" operation="sendFileReadRequest"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchXPath/><con:routeScript/><con:response name="Response 1" id="5a2a23aa-0910-4bc8-bf92-a3a0ad70ea52" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendFileReadRequestResponse>
         <sendFileReadRequestReturn>
            <!--Optional:-->
            <header>
               <createTime>?</createTime>
               <creatorId>?</creatorId>
               <creatorType>?</creatorType>
               <dataType>
                  <!--Optional:-->
                  <data>?</data>
                  <transport>?</transport>
                  <format>?</format>
                  <method>?</method>
               </dataType>
               <messageId>?</messageId>
               <password>?</password>
               <transferSystemId>?</transferSystemId>
               <alLogin>?</alLogin>
            </header>
            <transferData>?</transferData>
         </sendFileReadRequestReturn>
      </ejb:sendFileReadRequestResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendFileReadRequest"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendFileSearchRequest" id="68b76d91-cd85-4469-afb4-afa41c4191c7" interface="AccessControlServiceSoapBinding" operation="sendFileSearchRequest"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchXPath/><con:routeScript/><con:response name="Response 1" id="67273b2d-75cf-43c8-ad58-1444c6fca123" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendFileSearchRequestResponse>
         <sendFileSearchRequestReturn>
            <!--Optional:-->
            <header>
               <createTime>?</createTime>
               <creatorId>?</creatorId>
               <creatorType>?</creatorType>
               <dataType>
                  <!--Optional:-->
                  <data>?</data>
                  <transport>?</transport>
                  <format>?</format>
                  <method>?</method>
               </dataType>
               <messageId>?</messageId>
               <password>?</password>
               <transferSystemId>?</transferSystemId>
               <alLogin>?</alLogin>
            </header>
            <transferData>?</transferData>
         </sendFileSearchRequestReturn>
      </ejb:sendFileSearchRequestResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendFileSearchRequest"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendFileWriteRequest" id="f395a102-b41a-4d4f-a8f5-32267773786b" interface="AccessControlServiceSoapBinding" operation="sendFileWriteRequest"><con:settings/><con:defaultResponse>fileWriteResponse</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchXPath/><con:routeScript/><con:response name="fileWriteResponse" id="81de0f61-4a2f-4be7-a121-780b0362c852" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <ns2:sendFileWriteRequestResponse xmlns:ns2="http://ejb.acs.egis.inforion.ru" xmlns:ns3="http://usists.ru/asteros/data">
         <sendFileWriteRequestReturn>
            <header>
               <createTime>${=java.time.LocalDateTime.now().toString()}</createTime>
               <creatorId>pud</creatorId>
               <creatorType>2</creatorType>
               <dataType>
                  <data>1</data>
                  <transport>2</transport>
                  <format>0</format>
                  <method>1</method>
               </dataType>
               <messageId>${=java.util.UUID.randomUUID()}</messageId>
               <password xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
               <transferSystemId>Подсистема управления доступом</transferSystemId>
               <alLogin xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            </header>
            <transferData><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns10:Message xsi:type="ns6:FileMessage" source="pud" xmlns:ns6="http://www.egis-otb.ru/messaging/" xmlns:ns5="http://www.egis-otb.ru/data/onsi/rail/countries/" xmlns:ns8="http://www.egis-otb.ru/query/" xmlns:ns7="http://www.egis-otb.ru/data/pdp/" xmlns:ns9="http://www.egis-otb.ru/messaging/acs/commands/" xmlns:ns12="http://www.egis-otb.ru/acs/errors/" xmlns:ns11="http://www.egis-otb.ru/logs/" xmlns:ns10="http://www.egis-otb.ru/datatypes/" xmlns:ns2="http://www.egis-otb.ru/data/timetable/delta/" xmlns:ns4="http://usists.ru/asteros/data" xmlns:ns3="http://www.egis-otb.ru/requests/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <fileData>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8bnM2OkRhdGFNZXNzYWdlIHhzaTp0eXBlPSJuczY6RXh0ZW5kZWREYXRhTWVzc2FnZSIgeG1sbnM6bnM1PSJodHRwOi8vd3d3LmVnaXMtb3RiLnJ1L2d0aW1wb3J0LyIgeG1sbnM6bnM2PSJodHRwOi8vd3d3LmVnaXMtb3RiLnJ1L21lc3NhZ2luZy8iIHhtbG5zOm5zNz0iaHR0cDovL3d3dy5lZ2lzLW90Yi5ydS9kYXRhdHlwZXMvIiB4bWxuczpuczg9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvZGF0YS9wZHAvIiB4bWxuczpuczEwPSJodHRwOi8vd3d3LmVnaXMtb3RiLnJ1L2RhdGEvb25zaS9zdGF0aW9ucy8iIHhtbG5zOm5zOT0iaHR0cDovL3d3dy5lZ2lzLW90Yi5ydS9kYXRhL3RpbWV0YWJsZS8iIHhtbG5zOm5zMTE9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvZGF0YS9vbnNpL29wZXJhdG9ycy8iIHhtbG5zOm5zMTI9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvcXVlcnkvIiB4bWxuczpuczI9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvZGF0YS90aW1ldGFibGUvZGVsdGEvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4bWxuczpuczM9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvcmVxdWVzdHMvIiB4bWxuczpuczQ9Imh0dHA6Ly93d3cuZWdpcy1vdGIucnUvZGF0YS9vbnNpL3JhaWwvY291bnRyaWVzLyI+CiAgICA8ZGF0YUFycmF5IHJlY29yZENvdW50PSIxIj4KICAgICAgICA8ZGF0YSB4c2k6dHlwZT0ibnM4OkF1dG9QRFAiICBpZD0iNzdhMzczZjMtMjVjOS00NWJlLWJkMzktYzAzY2MwOWJhMGFiIiBhcnJheUlkPSI2YTVjMjJhNi0yN2JjLTRkZjUtYjY0ZS1hMzkwYThhMzAzYWMiPgogICAgICAgICAgICA8YXJyaXZlUGxhY2UgdmFsdWU9ItCi0YDQtdGC0LjQuSDQv9C+0YHQtdC70L7QuiIgaWQ9IjYzMzAyIi8+CiAgICAgICAgICAgIDxiaXJ0aGRhdGUgdmFsdWU9IjE5OTAtMDItMjUiLz4KICAgICAgICAgICAgPGNpdGl6ZW5zaGlwIHZhbHVlPSLQoNCe0KHQodCY0JnQodCa0JDQryDQpNCV0JTQldCg0JDQptCY0K8iIGlkPSIxODUiLz4KICAgICAgICAgICAgPGRlcGFydFBsYWNlIHZhbHVlPSLQn9C10YDQstGL0Lkg0L/QvtGB0LXQu9C+0LoiIGlkPSI2MzMwMCIvPgogICAgICAgICAgICA8ZG9jTnVtYmVyIHZhbHVlPSIxMzk3NjMzNTAwIi8+CiAgICAgICAgICAgIDxkb2NOdW1iZXJOb3JtYWwgdmFsdWU9IjEzOTc2MzM1MDAiLz4KICAgICAgICAgICAgPGRvY1R5cGUgdmFsdWU9IjAiIGlkPSIwIi8+CiAgICAgICAgICAgIDxnZW5kZXIgdmFsdWU9Ik0iIGlkPSIwIi8+CiAgICAgICAgICAgIDxuYW1lIHZhbHVlPSLQotC10YHRgjEiLz4KICAgICAgICAgICAgPG5hbWVOb3JtYWwgdmFsdWU9IlRFQ1QxIi8+CiAgICAgICAgICAgIDxvcGVyYXRpb25UeXBlIHZhbHVlPSIxIiBpZD0iMSIvPgogICAgICAgICAgICA8b3BlcmF0b3JJZCB2YWx1ZT0iMjAwMDA0IiBpZD0iMjQ3NzYiLz4KICAgICAgICAgICAgPHBhdHJvbnltaWMgdmFsdWU9ItCi0LXRgdGC0L7QstC40YcxIi8+CiAgICAgICAgICAgIDxwYXRyb255bWljTm9ybWFsIHZhbHVlPSJURUNUT0LQmNCnMSIvPgogICAgICAgICAgICA8cmVnaXN0ZXJUaW1lSVMgdmFsdWU9IjIwMTktMTAtMDJUMTA6MDA6MDAuMDAwWiIvPgogICAgICAgICAgICA8c3VybmFtZSB2YWx1ZT0i0KLQtdGB0YLQvtCy0YvQuTEiLz4KICAgICAgICAgICAgPHN1cm5hbWVOb3JtYWwgdmFsdWU9IlRFQ1RPQtCr0JkxIi8+CiAgICAgICAgICAgIDxhcnJpdmVEYXRlIHZhbHVlPSIyMDIwLTAxLTE1VDIwOjAwOjAwLjAwMCIvPgogICAgICAgICAgICA8ZGVwYXJ0RGF0ZSB2YWx1ZT0iMjAyMC0wMS0xNVQxMjowMDowMC4wMDAiLz4KICAgICAgICAgICAgPGFycml2ZURhdGVGYWN0IHZhbHVlPSIyMDIwLTAxLTE1VDE3OjEwOjAwLjAwMCIvPgogICAgICAgICAgICA8ZGVwYXJ0RGF0ZUZhY3QgdmFsdWU9IjIwMjAtMDEtMTVUMTI6MDQ6MDAuMDAwIi8+CiAgICAgICAgICAgIDxyb3V0ZSB2YWx1ZT0i0J/QtdGA0LLRi9C5IC0g0KLRgNC10YLQuNC5INC/0L7RgdC10LvQutC4Ii8+CiAgICAgICAgICAgIDxvcGVyYXRvclZlcnNpb24gdmFsdWU9IjEiLz4KICAgICAgICAgICAgPHJvdXRlVHlwZSB2YWx1ZT0iMCIgaWQ9IjAiLz4KICAgICAgICAgICAgPHJlY1R5cGUgdmFsdWU9IjEiIGlkPSIxIi8+CiAgICAgICAgICAgIDxyYW5rIHZhbHVlPSLQv9Cw0YHRgdCw0LbQuNGAIi8+CiAgICAgICAgICAgIDxkb2N1bWVudEFkZGl0aW9uYWxJbmZvIHZhbHVlPSLQv9C+0LTQu9C10LbQuNGCINC30LDQvNC10L3QtSIvPgogICAgICAgICAgICA8YnV5RGF0ZSB2YWx1ZT0iMjAyMC0wMS0xNVQxMjowNDowMC4wMDAiLz4KICAgICAgICAgICAgPHBsYWNlcyB2YWx1ZT0iMSIvPgogICAgICAgICAgICA8cmVzZXJ2ZWRTZWF0c0NvdW50Lz4KICAgICAgICAgICAgPHRlcm1OdW1PclN1cm5hbWUgdmFsdWU9IjM0NSIvPgogICAgICAgICAgICA8Z3J6IHZhbHVlPSLQktChMjciLz4KICAgICAgICAgICAgPG1vZGVsIHZhbHVlPSLQndCV0J7Qn9Cb0JDQnSA1NC8wIi8+CiAgICAgICAgICAgIDxwbGFjZUlkIHZhbHVlPSIyMDAwMDEiIGlkPSI0MTAyIi8+CiAgICAgICAgPC9kYXRhPgogICAgICAgPC9kYXRhQXJyYXk+CiAgICA8d3JvbmdEYXRhQXJyYXkgcmVjb3JkQ291bnQ9IjAiLz4KPC9uczY6RGF0YU1lc3NhZ2U+</fileData>
    <fileInfo archiveId="e5eb2e03-6cb9-4c5f-89ea-d27c494da5af" createdAt="${=java.time.LocalDateTime.now().toString()}" fileName="fileName.xml" format="XML"/>
</ns10:Message>]]]]>><![CDATA[</transferData>
         </sendFileWriteRequestReturn>
      </ns2:sendFileWriteRequestResponse>
   </soap:Body>
</soap:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendFileWriteRequest"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendPBDLogsReadRequest" id="ef406e1e-4b3e-4923-9dc4-19a27cb3b704" interface="AccessControlServiceSoapBinding" operation="sendPBDLogsReadRequest"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchXPath/><con:routeScript/><con:response name="Response 1" id="a8db09ed-540e-47cd-a003-68d298900b8b" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendPBDLogsReadRequestResponse>
         <sendPBDLogsReadRequestReturn>
            <!--Optional:-->
            <header>
               <createTime>?</createTime>
               <creatorId>?</creatorId>
               <creatorType>?</creatorType>
               <dataType>
                  <!--Optional:-->
                  <data>?</data>
                  <transport>?</transport>
                  <format>?</format>
                  <method>?</method>
               </dataType>
               <messageId>?</messageId>
               <password>?</password>
               <transferSystemId>?</transferSystemId>
               <alLogin>?</alLogin>
            </header>
            <transferData>?</transferData>
         </sendPBDLogsReadRequestReturn>
      </ejb:sendPBDLogsReadRequestResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendPBDLogsReadRequest"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendPVBLogsReadRequest" id="a70f5a47-c2be-4459-8960-9483ea86b3f5" interface="AccessControlServiceSoapBinding" operation="sendPVBLogsReadRequest"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchXPath/><con:routeScript/><con:response name="Response 1" id="9ccc7ac3-bb86-4b2e-a1bd-205470a6c506" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendPVBLogsReadRequestResponse>
         <sendPVBLogsReadRequestReturn>
            <!--Optional:-->
            <header>
               <createTime>?</createTime>
               <creatorId>?</creatorId>
               <creatorType>?</creatorType>
               <dataType>
                  <!--Optional:-->
                  <data>?</data>
                  <transport>?</transport>
                  <format>?</format>
                  <method>?</method>
               </dataType>
               <messageId>?</messageId>
               <password>?</password>
               <transferSystemId>?</transferSystemId>
               <alLogin>?</alLogin>
            </header>
            <transferData>?</transferData>
         </sendPVBLogsReadRequestReturn>
      </ejb:sendPVBLogsReadRequestResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendPVBLogsReadRequest"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendWrongRecordReadRequest" id="be4d5f43-6d53-4dae-ba92-cfb8b43bbd14" interface="AccessControlServiceSoapBinding" operation="sendWrongRecordReadRequest"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchXPath/><con:routeScript/><con:response name="Response 1" id="0f0e5c50-6d81-4b04-942e-b523649efe7b" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendWrongRecordReadRequestResponse>
         <sendWrongRecordReadRequestReturn>
            <!--Optional:-->
            <header>
               <createTime>?</createTime>
               <creatorId>?</creatorId>
               <creatorType>?</creatorType>
               <dataType>
                  <!--Optional:-->
                  <data>?</data>
                  <transport>?</transport>
                  <format>?</format>
                  <method>?</method>
               </dataType>
               <messageId>?</messageId>
               <password>?</password>
               <transferSystemId>?</transferSystemId>
               <alLogin>?</alLogin>
            </header>
            <transferData>?</transferData>
         </sendWrongRecordReadRequestReturn>
      </ejb:sendWrongRecordReadRequestResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendWrongRecordReadRequest"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendWrongRecordWriteRequest" id="78336907-a8ac-4498-b127-55bf9fc6f4ad" interface="AccessControlServiceSoapBinding" operation="sendWrongRecordWriteRequest"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchXPath/><con:routeScript/><con:response name="Response 1" id="72fc0a85-bdc8-41d8-81cf-907a68ad4725" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <ejb:sendWrongRecordWriteRequestResponse>
         <sendWrongRecordWriteRequestReturn>
            <!--Optional:-->
            <header>
               <createTime>?</createTime>
               <creatorId>?</creatorId>
               <creatorType>?</creatorType>
               <dataType>
                  <!--Optional:-->
                  <data>?</data>
                  <transport>?</transport>
                  <format>?</format>
                  <method>?</method>
               </dataType>
               <messageId>?</messageId>
               <password>?</password>
               <transferSystemId>?</transferSystemId>
               <alLogin>?</alLogin>
            </header>
            <transferData>?</transferData>
         </sendWrongRecordWriteRequestReturn>
      </ejb:sendWrongRecordWriteRequestResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="sendWrongRecordWriteRequest"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:mockService id="fa302ded-84ba-46bc-a6b8-110cd97598c3" port="8088" path="/mockParserManagerBinding" host="localhost" name="ParserManager MockService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties><con:property><con:name>archiveId</con:name><con:value>${=java.util.UUID.randomUUID()}</con:value></con:property><con:property><con:name>fileName</con:name><con:value/></con:property></con:properties><con:dataSources/><con:headerValidator/><con:mockOperation name="parseFile" id="4677efb9-8624-4717-b8dc-9368ef04d934" interface="ParserManagerBinding" operation="parseFile"><con:settings/><con:defaultResponse>success</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.GroovyUtils

def request = new XmlHolder( mockRequest.requestContent )
holder = request.getNodeValue("//*:transferData")

if (holder.contains( "FileMessage" )) {	
	
	return "success" 
	}
	else {
		return "errorResponse"
	}


</con:dispatchPath><con:dispatchXPath/><con:routeScript/><con:response name="success" id="6fa6565a-d7d7-4ceb-ba24-e1ef0141ff31" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:script/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
   <soapenv:Body>
      <dlwmin:parseFileResponse xmlns:dlwmin="http://www.egis-otb.ru/general/pmanager" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <return xmlns:ns2="http://www.egis-otb.ru/general/pmanager" xmlns:ns3="http://usists.ru/asteros/data">
            <transferData><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns4:AckMessage xsi:type="ns4:AckCheckMessage" archiveId="${#MockService#archiveId}" fileName="${fileName}" status="true" errCode="0" description="all ok" source="parser-manager" xmlns:ns2="http://www.egis-otb.ru/data/timetable/delta/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns3="http://www.egis-otb.ru/data/onsi/rail/countries/" xmlns:ns4="http://www.egis-otb.ru/messaging/">
    <info archiveId="${#MockService#archiveId}" errCode="0">
        <entry errCode="0" fileName="20000_2020_03_25_11_03_10_602.xml"/>
    </info>
</ns4:AckMessage>]]]]>><![CDATA[</transferData>
         </return>
      </dlwmin:parseFileResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.egis-otb.ru/general/pmanager/ParserManager/parseFileResponse"/></con:response><con:response name="errorResponse" id="54842f91-7975-4e09-b0d4-b290b4ef9c21" httpResponseStatus="200" encoding="UTF-8" dataSource=""><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ejb="http://ejb.acs.egis.inforion.ru">
   <soapenv:Header/>
   <soapenv:Body>
      <error>В mock-сервисе отсутствует ответ на данный запрос</error>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.egis-otb.ru/general/pmanager/ParserManager/parseFileResponse"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:requirements/><con:properties><con:property><con:name>projectProperty</con:name><con:value>Значение свойства</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/><con:environment id="d06f568b-ef9e-4306-9dd7-b8f3baf6235c" name="Тестовая"><con:service type="SOAP" name="AccessControlServiceSoapBinding"><con:endpoint authProfile="No Authorization"/></con:service><con:service type="SOAP" name="ParserManagerBinding"><con:endpoint authProfile="No Authorization"/></con:service><con:service type="SOAP" name="OkatoServiceBinding"><con:endpoint authProfile="No Authorization"/></con:service><con:property><con:name>projectProperty</con:name><con:value/></con:property><con:databaseConnectionContainer/><con:jmsConnectionContainer/></con:environment><con:authRepository/><con:environmentSpec><con:entry environmentId="d06f568b-ef9e-4306-9dd7-b8f3baf6235c"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec><con:tags/></con:soapui-project>